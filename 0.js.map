{"version":3,"sources":["webpack:///0.js","webpack:///./src/analytics.js","webpack:///./~/autotrack/lib/utilities.js","webpack:///./~/autotrack/lib/provide.js","webpack:///./~/autotrack/lib/usage.js","webpack:///./~/autotrack/lib/constants.js","webpack:///./~/autotrack/lib/method-chain.js","webpack:///./~/dom-utils/lib/matches.js","webpack:///./~/autotrack/lib/store.js","webpack:///./~/dom-utils/lib/closest.js","webpack:///./~/dom-utils/lib/parents.js","webpack:///./~/autotrack/lib/event-emitter.js","webpack:///./~/autotrack/lib/plugins/clean-url-tracker.js","webpack:///./~/autotrack/lib/plugins/event-tracker.js","webpack:///./~/autotrack/lib/plugins/outbound-link-tracker.js","webpack:///./~/autotrack/lib/plugins/page-visibility-tracker.js","webpack:///./~/autotrack/lib/plugins/social-widget-tracker.js","webpack:///./~/autotrack/lib/session.js","webpack:///./~/dom-utils/lib/delegate.js","webpack:///./~/dom-utils/lib/get-attributes.js","webpack:///./~/dom-utils/lib/parse-url.js"],"names":["webpackJsonp","30","module","__webpack_exports__","__webpack_require__","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","d","init","trackError","trackJsClientLoadTime","trackNoGoogleAnalyticsAccounts","updateParams","trackCreateReport","trackReportError","TRACKING_ID","TRACKING_VERSION","NULL_VALUE","dimensions","CLIENT_ID","WINDOW_ID","HIT_ID","HIT_TIME","HIT_TYPE","HIT_SOURCE","VISIBILITY_STATE","URL_QUERY_PARAMS","REPORT_METRIC","REPORT_DIMENSION","REPORT_DATE_RANGE","REPORT_MAX_RESULTS","SIGNED_IN","metrics","RESPONSE_END_TIME","DOM_LOAD_TIME","WINDOW_LOAD_TIME","PAGE_VISIBLE","JS_CLIENT_LOAD_TIME","state","arguments","length","undefined","window","ga","_len","args","Array","_key","q","push","createTracker","trackErrors","trackCustomDimensions","requireAutotrackPlugins","sendInitialPageview","sendNavigationTimingMetrics","error","fieldsObj","assign","eventCategory","eventAction","eventLabel","stack","nonInteraction","loadTime","_ga","roundedLoadTime","Math","round","eventValue","fieldName","paramValues","_ga2","metric","dimension","String","dateRange","maxResults","err","code","status","message","loadErrorEvents","__e","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","event","return","addEventListener","params","auth","keys","forEach","tracker","_tracker$set","set","get","uuid","isSignedIn","originalBuildHitTask","model","Date","document","visibilityState","stripQuery","queryDimensionIndex","getDefinitionIndex","trailingSlash","attributePrefix","events","visibleMetricIndex","sessionTimeout","timeZone","performance","timing","readyState","nt","navStart","navigationStart","responseEnd","domLoaded","domContentLoadedEventStart","windowLoaded","loadEventStart","allValuesAreValid","_len2","values","_key2","every","_ga4","definition","exec","b","a","random","toString","replace","354","createFieldsObj","defaultFields","userFields","hitFilter","target","buildHitTask","getAttributeFields","element","prefix","attributes","i","__WEBPACK_IMPORTED_MODULE_0_dom_utils__","attributeFields","attribute","indexOf","field","camelCase","slice","withTimeout","callback","wait","called","fn","setTimeout","str","match","p1","toUpperCase","capitalize","charAt","isObject","_typeof","now","constructor","prototype","sources","source","hasOwnProperty","call","355","provide","pluginName","pluginConstructor","gaAlias","GoogleAnalyticsObject","gaDevIds","__WEBPACK_IMPORTED_MODULE_0__constants__","gaplugins","__WEBPACK_IMPORTED_MODULE_1__utilities__","356","trackUsage","plugin","trackVersion","trackPlugin","convertHexToBin","hex","parseInt","convertBinToHex","bin","padZeros","len","toAdd","flipBitOn","index","substr","pluginIndex","usageHex","usageBin","PLUGIN_COUNT","plugins","CLEAN_URL_TRACKER","EVENT_TRACKER","IMPRESSION_TRACKER","MEDIA_QUERY_TRACKER","OUTBOUND_FORM_TRACKER","OUTBOUND_LINK_TRACKER","PAGE_VISIBILITY_TRACKER","SOCIAL_WIDGET_TRACKER","URL_CHANGE_TRACKER","MAX_SCROLL_TRACKER","357","VERSION","DEV_ID","VERSION_PARAM","USAGE_PARAM","NULL_DIMENSION","358","__WEBPACK_IMPORTED_MODULE_1__lib_delegate__","__WEBPACK_IMPORTED_MODULE_3__lib_get_attributes__","__WEBPACK_IMPORTED_MODULE_6__lib_parse_url__","359","_classCallCheck","instance","Constructor","TypeError","getOrCreateMethodChain","context","methodName","methodChain","instances","filter","h","MethodChain","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_this","this","isTask","test","originalMethodReference","boundMethodChain","wrappedMethod","lastBoundMethod","methodOverride","add","remove","overrideMethod","rebindMethodChain","splice","destroy","method","previousMethod","bind","360","matches","nodeType","matchesSelector","item","selector","nativeMatches","node","nodes","parentNode","querySelectorAll","proto","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","361","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","initStorageListener","storageListener","isListening","removeStorageListener","removeEventListener","store","oldData","parse","oldValue","defaults","newData","newValue","emit","data","JSON","__WEBPACK_IMPORTED_MODULE_0__event_emitter__","AUTOTRACK_PREFIX","Store","_EventEmitter","getPrototypeOf","trackingId","namespace","join","storedItem","localStorage","getItem","mergedData","setItem","stringify","removeItem","362","closest","shouldCheckSelf","parent","parentElements","concat","__WEBPACK_IMPORTED_MODULE_1__parents__","__WEBPACK_IMPORTED_MODULE_0__matches__","363","parents","list","364","EventEmitter","registry_","getRegistry_","eventRegistry","handlerIndex","eventCount","365","__WEBPACK_IMPORTED_MODULE_1__constants__","__WEBPACK_IMPORTED_MODULE_2__method_chain__","__WEBPACK_IMPORTED_MODULE_3__provide__","__WEBPACK_IMPORTED_MODULE_4__usage__","__WEBPACK_IMPORTED_MODULE_5__utilities__","CleanUrlTracker","opts","defaultOpts","queryDimension","trackerGetOverride","buildHitTaskOverride","originalMethod","location","page","cleanedFieldsObj","cleanUrlFields","_this2","url","pathname","indexFilename","parts","split","isFilename","search","urlFieldsFilter","userCleanedFieldsObj","366","__WEBPACK_IMPORTED_MODULE_1__provide__","__WEBPACK_IMPORTED_MODULE_2__usage__","__WEBPACK_IMPORTED_MODULE_3__utilities__","EventTracker","handleEvents","delegates","composed","useCapture","type","getAttribute","transport","hitType","send","367","linkClickWillUnloadCurrentPage","link","metaKey","ctrlKey","shiftKey","altKey","which","OutboundLinkTracker","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","href","navigator","sendBeacon","defaultPrevented","preventDefault","hitCallback","parseUrlFn","hostname","protocol","368","__WEBPACK_IMPORTED_MODULE_1__method_chain__","__WEBPACK_IMPORTED_MODULE_2__provide__","__WEBPACK_IMPORTED_MODULE_3__session__","__WEBPACK_IMPORTED_MODULE_4__store__","__WEBPACK_IMPORTED_MODULE_5__usage__","__WEBPACK_IMPORTED_MODULE_6__utilities__","HIDDEN","VISIBLE","PAGE_ID","SECONDS","PageVisibilityTracker","DEFAULT_TIMEOUT","lastPageState","trackerSetOverride","handleChange","handleWindowUnload","handleExternalStoreSet","getOrCreate","on","session","lastStoredChange","validateChangeData","change","time","pageId","isExpired","clear","sendPageVisibilityEvent","hitTime","queueTime","delta","getTimeSinceLastStoredChange","fields","isSessionActive","timeSinceLastStoredChange","369","__WEBPACK_IMPORTED_MODULE_0__provide__","__WEBPACK_IMPORTED_MODULE_1__usage__","__WEBPACK_IMPORTED_MODULE_2__utilities__","SocialWidgetTracker","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","FB","addFacebookEventHandlers","twttr","ready","unbind","Event","subscribe","unsubscribe","region","socialNetwork","socialAction","socialTarget","screenName","screen_name","removeFacebookEventHandlers","removeTwitterEventHandlers","370","__WEBPACK_IMPORTED_MODULE_0__method_chain__","__WEBPACK_IMPORTED_MODULE_1__store__","MINUTES","Session","timeout","sendHitTaskOverride","dateTimeFormatter","Intl","DateTimeFormat","defaultProps","sessionData","currentDate","oldHitTime","oldHitDate","datesAreDifferentInTimezone","d1","d2","format","isSessionExpired","sessionControl","sessionWillStart","sessionWillEnd","371","delegate","ancestor","eventType","listener","delegateTarget","composedPath","__WEBPACK_IMPORTED_MODULE_1__matches__","__WEBPACK_IMPORTED_MODULE_0__closest__","372","373","getAttributes","attrs","map","attr","name","374","parseUrl","cache","port","HTTP_PORT","HTTPS_PORT","host","DEFAULT_PORT","origin","hash","RegExp","createElement"],"mappings":"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","file":"0.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 30:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_autotrack_lib_plugins_clean_url_tracker__ = __webpack_require__(365);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_autotrack_lib_plugins_event_tracker__ = __webpack_require__(366);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_autotrack_lib_plugins_outbound_link_tracker__ = __webpack_require__(367);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_autotrack_lib_plugins_page_visibility_tracker__ = __webpack_require__(368);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_autotrack_lib_plugins_social_widget_tracker__ = __webpack_require__(369);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"init\", function() { return init; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trackError\", function() { return trackError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trackJsClientLoadTime\", function() { return trackJsClientLoadTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trackNoGoogleAnalyticsAccounts\", function() { return trackNoGoogleAnalyticsAccounts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateParams\", function() { return updateParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trackCreateReport\", function() { return trackCreateReport; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trackReportError\", function() { return trackReportError; });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Import the individual autotrack plugins you want to use.\n\n\n\n\n\n\n/* global ga */\n\n/**\n * The tracking ID for your Google Analytics property.\n * https://support.google.com/analytics/answer/1032385\n */\nvar TRACKING_ID = 'UA-40829935-6';\n\n/**\n * Bump this when making backwards incompatible changes to the tracking\n * implementation. This allows you to create a segment or view filter\n * that isolates only data captured with the most recent tracking changes.\n */\nvar TRACKING_VERSION = '1';\n\n/**\n * A default value for dimensions so unset values always are reported as\n * something. This is needed since Google Analytics will drop empty dimension\n * values in reports.\n */\nvar NULL_VALUE = '(not set)';\n\n/**\n * A maping between custom dimension names and their indexes.\n */\nvar dimensions = {\n  TRACKING_VERSION: 'dimension1',\n  CLIENT_ID: 'dimension2',\n  WINDOW_ID: 'dimension3',\n  HIT_ID: 'dimension4',\n  HIT_TIME: 'dimension5',\n  HIT_TYPE: 'dimension6',\n  HIT_SOURCE: 'dimension7',\n  VISIBILITY_STATE: 'dimension8',\n  URL_QUERY_PARAMS: 'dimension9',\n  REPORT_METRIC: 'dimension10',\n  REPORT_DIMENSION: 'dimension11',\n  REPORT_DATE_RANGE: 'dimension12',\n  REPORT_MAX_RESULTS: 'dimension13',\n  SIGNED_IN: 'dimension14'\n};\n\n/**\n * A maping between custom dimension names and their indexes.\n */\nvar metrics = {\n  RESPONSE_END_TIME: 'metric1',\n  DOM_LOAD_TIME: 'metric2',\n  WINDOW_LOAD_TIME: 'metric3',\n  PAGE_VISIBLE: 'metric4',\n  JS_CLIENT_LOAD_TIME: 'metric5'\n};\n\n/**\n * Initializes all the analytics setup. Creates trackers and sets initial\n * values on the trackers.\n * @param {!Object} state\n */\nvar init = function init() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // Initialize the command queue in case analytics.js hasn't loaded yet.\n  window.ga = window.ga || function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (ga.q = ga.q || []).push(args);\n  };\n\n  createTracker();\n  trackErrors();\n  trackCustomDimensions(state);\n  requireAutotrackPlugins();\n  sendInitialPageview();\n  sendNavigationTimingMetrics();\n};\n\n/**\n * Tracks a JavaScript error with optional fields object overrides.\n * This function is exported so it can be used in other parts of the codebase.\n * E.g.:\n *\n *    `fetch('/api.json').catch(trackError);`\n *\n * @param {Error|undefined} error\n * @param {Object=} fieldsObj\n */\nvar trackError = function trackError(error) {\n  var fieldsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  ga('send', 'event', Object.assign({\n    eventCategory: 'Script',\n    eventAction: 'error',\n    eventLabel: error && error.stack || NULL_VALUE,\n    nonInteraction: true\n  }, fieldsObj));\n};\n\nvar trackJsClientLoadTime = function trackJsClientLoadTime(loadTime) {\n  var _ga;\n\n  var roundedLoadTime = Math.round(loadTime);\n  ga('send', 'event', (_ga = {\n    eventCategory: 'Google JS Client',\n    eventAction: 'load',\n    eventLabel: NULL_VALUE,\n    eventValue: roundedLoadTime\n  }, _defineProperty(_ga, metrics.JS_CLIENT_LOAD_TIME, roundedLoadTime), _defineProperty(_ga, 'nonInteraction', true), _ga));\n};\n\nvar trackNoGoogleAnalyticsAccounts = function trackNoGoogleAnalyticsAccounts() {\n  ga('send', 'event', 'Google Analytics', 'error', 'no accounts');\n};\n\nvar updateParams = function updateParams(fieldName, paramValues) {\n  var _ga2;\n\n  ga('set', (_ga2 = {}, _defineProperty(_ga2, dimensions.REPORT_METRIC, paramValues.metric), _defineProperty(_ga2, dimensions.REPORT_DIMENSION, paramValues.dimension), _defineProperty(_ga2, dimensions.REPORT_DATE_RANGE, String(paramValues.dateRange)), _defineProperty(_ga2, dimensions.REPORT_MAX_RESULTS, String(paramValues.maxResults)), _ga2));\n  ga('send', 'event', 'Report', 'update', fieldName);\n};\n\nvar trackCreateReport = function trackCreateReport() {\n  ga('send', 'event', 'Report', 'create', NULL_VALUE);\n};\n\nvar trackReportError = function trackReportError(err) {\n  ga('send', 'event', 'Report', 'error', {\n    eventLabel: '(' + err.code + ': ' + err.status + ') ' + err.message\n  });\n};\n\n// TODO(philipwalton): implement JS client timeout and error tracking.\n// export const trackJsClientLoadError = (err) => {\n//   ga('send', 'event', {\n//     eventCategory: 'Google JS Client',\n//     eventAction: 'error',\n//     eventLabel: err.message,\n//     nonInteraction: true,\n//   });\n// };\n// export const trackJsClientLoadTimeout = (err) => {\n//   ga('send', 'event', {\n//     eventCategory: 'Google JS Client',\n//     eventAction: 'timeout',\n//     eventLabel: NULL_VALUE,\n//     nonInteraction: true,\n//   });\n// };\n\n\n/**\n * Creates the trackers and sets the default transport and tracking\n * version fields. In non-production environments it also logs hits.\n */\nvar createTracker = function createTracker() {\n  ga('create', TRACKING_ID, 'auto');\n\n  // Ensures all hits are sent via `navigator.sendBeacon()`.\n  ga('set', 'transport', 'beacon');\n};\n\n/**\n * Tracks any errors that may have occured on the page prior to analytics being\n * initialized, then adds an event handler to track future errors.\n */\nvar trackErrors = function trackErrors() {\n  // Errors that have occurred prior to this script running are stored on\n  // `window.__e.q`, as specified in `index.html`.\n  var loadErrorEvents = window.__e && window.__e.q || [];\n\n  // Use a different eventAction for uncaught errors.\n  var fieldsObj = { eventAction: 'uncaught error' };\n\n  // Replay any stored load error events.\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = loadErrorEvents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var event = _step.value;\n\n      trackError(event.error, fieldsObj);\n    }\n\n    // Add a new listener to track event immediately.\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  window.addEventListener('error', function (event) {\n    trackError(event.error, fieldsObj);\n  });\n};\n\n/**\n * Sets a default dimension value for all custom dimensions on all trackers.\n * @param {!Object} state\n */\nvar trackCustomDimensions = function trackCustomDimensions() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var params = state.params,\n      auth = state.auth;\n\n  // Sets a default dimension value for all custom dimensions to ensure\n  // that every dimension in every hit has *some* value. This is necessary\n  // because Google Analytics will drop rows with empty dimension values\n  // in your reports.\n\n  Object.keys(dimensions).forEach(function (key) {\n    ga('set', dimensions[key], NULL_VALUE);\n  });\n\n  // Adds tracking of dimensions known at page load time.\n  ga(function (tracker) {\n    var _tracker$set;\n\n    tracker.set((_tracker$set = {}, _defineProperty(_tracker$set, dimensions.TRACKING_VERSION, TRACKING_VERSION), _defineProperty(_tracker$set, dimensions.CLIENT_ID, tracker.get('clientId')), _defineProperty(_tracker$set, dimensions.WINDOW_ID, uuid()), _defineProperty(_tracker$set, dimensions.SIGNED_IN, String(auth.isSignedIn)), _defineProperty(_tracker$set, dimensions.REPORT_METRIC, params.metric), _defineProperty(_tracker$set, dimensions.REPORT_DIMENSION, params.dimension), _defineProperty(_tracker$set, dimensions.REPORT_DATE_RANGE, String(params.dateRange)), _defineProperty(_tracker$set, dimensions.REPORT_MAX_RESULTS, String(params.maxResults)), _tracker$set));\n  });\n\n  // Adds tracking to record each the type, time, uuid, and visibility state\n  // of each hit immediately before it's sent.\n  ga(function (tracker) {\n    var originalBuildHitTask = tracker.get('buildHitTask');\n    tracker.set('buildHitTask', function (model) {\n      model.set(dimensions.HIT_ID, uuid(), true);\n      model.set(dimensions.HIT_TIME, String(+new Date()), true);\n      model.set(dimensions.HIT_TYPE, model.get('hitType'), true);\n      model.set(dimensions.VISIBILITY_STATE, document.visibilityState, true);\n\n      originalBuildHitTask(model);\n    });\n  });\n};\n\n/**\n * Requires select autotrack plugins and initializes each one with its\n * respective configuration options.\n */\nvar requireAutotrackPlugins = function requireAutotrackPlugins() {\n  ga('require', 'cleanUrlTracker', {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    trailingSlash: 'remove'\n  });\n  ga('require', 'eventTracker', {\n    attributePrefix: 'data-'\n  });\n  ga('require', 'outboundLinkTracker', {\n    events: ['click', 'contextmenu']\n  });\n  ga('require', 'pageVisibilityTracker', {\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    sessionTimeout: 30,\n    timeZone: 'America/Los_Angeles',\n    fieldsObj: _defineProperty({}, dimensions.HIT_SOURCE, 'pageVisibilityTracker')\n  });\n  ga('require', 'socialWidgetTracker');\n};\n\n/**\n * Sends the initial pageview to Google Analytics.\n */\nvar sendInitialPageview = function sendInitialPageview() {\n  ga('send', 'pageview', _defineProperty({}, dimensions.HIT_SOURCE, 'pageload'));\n};\n\n/**\n * Gets the DOM and window load times and sends them as custom metrics to\n * Google Analytics via an event hit.\n */\nvar sendNavigationTimingMetrics = function sendNavigationTimingMetrics() {\n  // Only track performance in supporting browsers.\n  if (!(window.performance && window.performance.timing)) return;\n\n  // If the window hasn't loaded, run this function after the `load` event.\n  if (document.readyState != 'complete') {\n    window.addEventListener('load', sendNavigationTimingMetrics);\n    return;\n  }\n\n  var nt = performance.timing;\n  var navStart = nt.navigationStart;\n\n  var responseEnd = Math.round(nt.responseEnd - navStart);\n  var domLoaded = Math.round(nt.domContentLoadedEventStart - navStart);\n  var windowLoaded = Math.round(nt.loadEventStart - navStart);\n\n  // In some edge cases browsers return very obviously incorrect NT values,\n  // e.g. 0, negative, or future times. This validates values before sending.\n  var allValuesAreValid = function allValuesAreValid() {\n    for (var _len2 = arguments.length, values = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      values[_key2] = arguments[_key2];\n    }\n\n    return values.every(function (value) {\n      return value > 0 && value < 6e6;\n    });\n  };\n\n  if (allValuesAreValid(responseEnd, domLoaded, windowLoaded)) {\n    var _ga4;\n\n    ga('send', 'event', (_ga4 = {\n      eventCategory: 'Navigation Timing',\n      eventAction: 'track',\n      nonInteraction: true\n    }, _defineProperty(_ga4, metrics.RESPONSE_END_TIME, responseEnd), _defineProperty(_ga4, metrics.DOM_LOAD_TIME, domLoaded), _defineProperty(_ga4, metrics.WINDOW_LOAD_TIME, windowLoaded), _ga4));\n  }\n};\n\n/**\n * Accepts a custom dimension or metric and returns it's numerical index.\n * @param {string} definition The definition string (e.g. 'dimension1').\n * @return {number} The definition index.\n */\nvar getDefinitionIndex = function getDefinitionIndex(definition) {\n  return +/\\d+$/.exec(definition)[0];\n};\n\n/**\n * Generates a UUID.\n * https://gist.github.com/jed/982883\n * @param {string|undefined=} a\n * @return {string}\n */\nvar uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n};\n\n/***/ }),\n\n/***/ 354:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(358);\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createFieldsObj;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = getAttributeFields;\n/* unused harmony export domReady */\n/* unused harmony export debounce */\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = withTimeout;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return assign; });\n/* unused harmony export camelCase */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = capitalize;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = isObject;\n/* unused harmony export toArray */\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = now;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return uuid; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @return {!FieldsObj} The final fields object.\n */\nfunction createFieldsObj(defaultFields, userFields) {\n  var tracker = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var hitFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var target = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n\n  if (typeof hitFilter == 'function') {\n    var originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: function buildHitTask( /** @type {!Model} */model) {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target);\n        originalBuildHitTask(model);\n      }\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nfunction getAttributeFields(element, prefix) {\n  var attributes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"a\" /* getAttributes */])(element);\n  var attributeFields = {};\n\n  Object.keys(attributes).forEach(function (attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      var value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      var field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nfunction domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nfunction debounce(fn, wait) {\n  var timeout = void 0;\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return fn.apply(undefined, args);\n    }, wait);\n  };\n}\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nfunction withTimeout(callback) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n\n  var called = false;\n  var fn = function fn() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...Object} sources Additional objects who properties should be\n *     assigned to target.\n * @return {!Object} The modified target object.\n */\nvar assign = Object.assign || function (target) {\n  for (var _len2 = arguments.length, sources = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    sources[_key2 - 1] = arguments[_key2];\n  }\n\n  for (var source, i = 0; source = sources[i]; i++) {\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nfunction camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function (match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nfunction isObject(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object' && value !== null;\n}\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nfunction toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @return {number} The current date timestamp\n */\nfunction now() {\n  return +new Date();\n}\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nvar uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n};\n/*eslint-enable */\n\n/***/ }),\n\n/***/ 355:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(357);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities__ = __webpack_require__(354);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = provide;\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nfunction provide(pluginName, pluginConstructor) {\n  var gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* DEV_ID */]) < 0) {\n    window.gaDevIds.push(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* DEV_ID */]);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"c\" /* capitalize */])(pluginName)] = pluginConstructor;\n}\n\n/***/ }),\n\n/***/ 356:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(357);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return plugins; });\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = trackUsage;\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10\n};\n\nvar PLUGIN_COUNT = Object.keys(plugins).length;\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nfunction trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get('&' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"b\" /* USAGE_PARAM */]);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"b\" /* USAGE_PARAM */], convertBinToHex(usageBin));\n}\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"c\" /* VERSION_PARAM */], __WEBPACK_IMPORTED_MODULE_0__constants__[\"d\" /* VERSION */]);\n}\n\n/***/ }),\n\n/***/ 357:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DEV_ID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return VERSION_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return USAGE_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return NULL_DIMENSION; });\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar VERSION = '2.0.1';\nvar DEV_ID = 'i5iSjo';\n\nvar VERSION_PARAM = '_av';\nvar USAGE_PARAM = '_au';\n\nvar NULL_DIMENSION = '(not set)';\n\n/***/ }),\n\n/***/ 358:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_closest__ = __webpack_require__(362);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_delegate__ = __webpack_require__(371);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_dispatch__ = __webpack_require__(372);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_get_attributes__ = __webpack_require__(373);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_matches__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_parents__ = __webpack_require__(363);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_parse_url__ = __webpack_require__(374);\n/* unused harmony reexport closest */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib_delegate__[\"a\"]; });\n/* unused harmony reexport dispatch */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__lib_get_attributes__[\"a\"]; });\n/* unused harmony reexport matches */\n/* unused harmony reexport parents */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_6__lib_parse_url__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ 359:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\nvar instances = [];\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\n\nvar MethodChain = function () {\n  _createClass(MethodChain, null, [{\n    key: \"add\",\n\n    /**\n     * Adds the passed override method to the list of method chain overrides.\n     * @param {!Object} context The object containing the method to chain.\n     * @param {string} methodName The name of the method on the object.\n     * @param {!Function} methodOverride The override method to add.\n     */\n    value: function add(context, methodName, methodOverride) {\n      getOrCreateMethodChain(context, methodName).add(methodOverride);\n    }\n\n    /**\n     * Removes a method chain added via `add()`. If the override is the\n     * only override added, the original method is restored.\n     * @param {!Object} context The object containing the method to unchain.\n     * @param {string} methodName The name of the method on the object.\n     * @param {!Function} methodOverride The override method to remove.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(context, methodName, methodOverride) {\n      getOrCreateMethodChain(context, methodName).remove(methodOverride);\n    }\n\n    /**\n     * Wraps a foreign object method and overrides it. Also stores a reference\n     * to the original method so it can be restored later.\n     * @param {!Object} context The object containing the method.\n     * @param {string} methodName The name of the method on the object.\n     */\n\n  }]);\n\n  function MethodChain(context, methodName) {\n    var _this = this;\n\n    _classCallCheck(this, MethodChain);\n\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ? context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = function () {\n      var lastBoundMethod = _this.boundMethodChain[_this.boundMethodChain.length - 1];\n\n      return lastBoundMethod.apply(undefined, arguments);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n\n\n  _createClass(MethodChain, [{\n    key: \"add\",\n    value: function add(overrideMethod) {\n      this.methodChain.push(overrideMethod);\n      this.rebindMethodChain();\n    }\n\n    /**\n     * Removes a method from the method chain and restores the prior order.\n     * @param {!Function} overrideMethod The override method to remove.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(overrideMethod) {\n      var index = this.methodChain.indexOf(overrideMethod);\n      if (index > -1) {\n        this.methodChain.splice(index, 1);\n        if (this.methodChain.length > 0) {\n          this.rebindMethodChain();\n        } else {\n          this.destroy();\n        }\n      }\n    }\n\n    /**\n     * Loops through the method chain array and recreates the bound method\n     * chain array. This is necessary any time a method is added or removed\n     * to ensure proper original method context and order.\n     */\n\n  }, {\n    key: \"rebindMethodChain\",\n    value: function rebindMethodChain() {\n      this.boundMethodChain = [];\n      for (var method, i = 0; method = this.methodChain[i]; i++) {\n        var previousMethod = this.boundMethodChain[i - 1] || this.originalMethodReference.bind(this.context);\n        this.boundMethodChain.push(method(previousMethod));\n      }\n    }\n\n    /**\n     * Calls super and destroys the instance if no registered handlers remain.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var index = instances.indexOf(this);\n      if (index > -1) {\n        instances.splice(index, 1);\n        if (this.isTask) {\n          this.context.set(this.methodName, this.originalMethodReference);\n        } else {\n          this.context[this.methodName] = this.originalMethodReference;\n        }\n      }\n    }\n  }]);\n\n  return MethodChain;\n}();\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = MethodChain;\nfunction getOrCreateMethodChain(context, methodName) {\n  var methodChain = instances.filter(function (h) {\n    return h.context == context && h.methodName == methodName;\n  })[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n\n/***/ }),\n\n/***/ 360:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = matches;\nvar proto = window.Element.prototype;\nvar nativeMatches = proto.matches || proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nfunction matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, /** @type {string} */test);\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n/***/ }),\n\n/***/ 361:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__event_emitter__ = __webpack_require__(364);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities__ = __webpack_require__(354);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar AUTOTRACK_PREFIX = 'autotrack';\nvar instances = {};\nvar isListening = false;\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\n\nvar Store = function (_EventEmitter) {\n  _inherits(Store, _EventEmitter);\n\n  _createClass(Store, null, [{\n    key: 'getOrCreate',\n\n    /**\n     * Gets an existing instance for the passed arguements or creates a new\n     * instance if one doesn't exist.\n     * @param {string} trackingId The tracking ID for the GA property.\n     * @param {string} namespace A namespace unique to this store.\n     * @param {Object=} defaults An optional object of key/value defaults.\n     * @return {Store} The Store instance.\n     */\n    value: function getOrCreate(trackingId, namespace, defaults) {\n      var key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n      // Don't create multiple instances for the same tracking Id and namespace.\n      if (!instances[key]) {\n        instances[key] = new Store(key, defaults);\n        instances[key].key = key;\n        if (!isListening) initStorageListener();\n      }\n      return instances[key];\n    }\n\n    /**\n     * @param {string} key A key unique to this store.\n     * @param {Object=} defaults An optional object of key/value defaults.\n     */\n\n  }]);\n\n  function Store(key, defaults) {\n    _classCallCheck(this, Store);\n\n    var _this = _possibleConstructorReturn(this, (Store.__proto__ || Object.getPrototypeOf(Store)).call(this));\n\n    _this.key = key;\n    _this.defaults = defaults || {};\n    return _this;\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n\n\n  _createClass(Store, [{\n    key: 'get',\n    value: function get() {\n      var storedItem = String(window.localStorage && window.localStorage.getItem(this.key));\n\n      if (typeof storedItem != 'string') return {};\n      // TODO(philipwalton): Implement schema migrations if/when a new\n      // schema version is introduced.\n      return parse(storedItem, this.defaults);\n    }\n\n    /**\n     * Saves the passed data object to localStorage,\n     * merging it with the existing data.\n     * @param {Object} newData The data to save.\n     */\n\n  }, {\n    key: 'set',\n    value: function set(newData) {\n      var oldData = this.get();\n      var mergedData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"a\" /* assign */])(oldData, newData);\n      window.localStorage && window.localStorage.setItem(this.key, JSON.stringify(mergedData));\n    }\n\n    /**\n     * Clears the data in localStorage for the current store.\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      window.localStorage && window.localStorage.removeItem(this.key);\n    }\n\n    /**\n     * Removes the store instance for the global instances map. If this is the\n     * last store instance, the storage listener is also removed.\n     * Note: this does not erase the stored data. Use `clear()` for that.\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete instances[this.key];\n      if (!Object.keys(instances).length) {\n        removeStorageListener();\n      }\n    }\n  }]);\n\n  return Store;\n}(__WEBPACK_IMPORTED_MODULE_0__event_emitter__[\"a\" /* default */]);\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = Store;\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  var store = instances[event.key];\n  if (store) {\n    var oldData = parse(event.oldValue, store.defaults);\n    var newData = parse(event.newValue, store.defaults);\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n/**\n * Parses a source string as JSON and merges the result with the passed\n * defaults object. If an error occurs while\n * @param {string} source A JSON string of data.\n * @param {!Object} defaults An object of key/value defaults.\n * @return {!Object} The parsed data object merged with the passed defaults.\n */\nfunction parse(source, defaults) {\n  var data = void 0;\n  try {\n    data = /** @type {!Object} */JSON.parse(source);\n  } catch (err) {\n    data = {};\n  }\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"a\" /* assign */])({}, defaults, data);\n}\n\n/***/ }),\n\n/***/ 362:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__matches__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parents__ = __webpack_require__(363);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = closest;\n\n\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nfunction closest(element, selector) {\n  var shouldCheckSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!(element && element.nodeType == 1 && selector)) return;\n  var parentElements = (shouldCheckSelf ? [element] : []).concat(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__parents__[\"a\" /* default */])(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__matches__[\"a\" /* default */])(parent, selector)) return parent;\n  }\n}\n\n/***/ }),\n\n/***/ 363:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parents;\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nfunction parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */element.parentNode;\n    list.push(element);\n  }\n  return list;\n}\n\n/***/ }),\n\n/***/ 364:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nvar EventEmitter = function () {\n  /**\n   * Creates the event registry.\n   */\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(event, fn) {\n      this.getRegistry_(event).push(fn);\n    }\n\n    /**\n     * Removes a handler function from the registry for the passed event.\n     * @param {string=} event The event name.\n     * @param {Function=} fn The handler to be removed.\n     */\n\n  }, {\n    key: \"off\",\n    value: function off() {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      if (event && fn) {\n        var eventRegistry = this.getRegistry_(event);\n        var handlerIndex = eventRegistry.indexOf(fn);\n        if (handlerIndex > -1) {\n          eventRegistry.splice(handlerIndex, 1);\n        }\n      } else {\n        this.registry_ = {};\n      }\n    }\n\n    /**\n     * Runs all registered handlers for the passed event with the optional args.\n     * @param {string} event The event name.\n     * @param {...*} args The arguments to be passed to the handler.\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      this.getRegistry_(event).forEach(function (fn) {\n        return fn.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Returns the total number of event handlers currently registered.\n     * @return {number}\n     */\n\n  }, {\n    key: \"getEventCount\",\n    value: function getEventCount() {\n      var _this = this;\n\n      var eventCount = 0;\n      Object.keys(this.registry_).forEach(function (event) {\n        eventCount += _this.getRegistry_(event).length;\n      });\n      return eventCount;\n    }\n\n    /**\n     * Returns an array of handlers associated with the passed event name.\n     * If no handlers have been registered, an empty array is returned.\n     * @private\n     * @param {string} event The event name.\n     * @return {!Array} An array of handler functions.\n     */\n\n  }, {\n    key: \"getRegistry_\",\n    value: function getRegistry_(event) {\n      return this.registry_[event] = this.registry_[event] || [];\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = EventEmitter;\n\n/***/ }),\n\n/***/ 365:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(358);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(357);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__method_chain__ = __webpack_require__(359);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__provide__ = __webpack_require__(355);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__usage__ = __webpack_require__(356);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utilities__ = __webpack_require__(354);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\n\nvar CleanUrlTracker = function () {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  function CleanUrlTracker(tracker, opts) {\n    _classCallCheck(this, CleanUrlTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_4__usage__[\"b\" /* plugins */].CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    var defaultOpts = {\n      // stripQuery: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery && this.opts.queryDimensionIndex ? 'dimension' + this.opts.queryDimensionIndex : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].add(tracker, 'get', this.trackerGetOverride);\n    __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n\n\n  _createClass(CleanUrlTracker, [{\n    key: 'trackerGetOverride',\n    value: function trackerGetOverride(originalMethod) {\n      var _this = this;\n\n      return function (field) {\n        if (field == 'page' || field == _this.queryDimension) {\n          var fieldsObj = /** @type {!FieldsObj} */{\n            location: originalMethod('location'),\n            page: originalMethod('page')\n          };\n          var cleanedFieldsObj = _this.cleanUrlFields(fieldsObj);\n          return cleanedFieldsObj[field];\n        } else {\n          return originalMethod(field);\n        }\n      };\n    }\n\n    /**\n     * Cleans URL fields passed in a send command.\n     * @param {function(!Model)} originalMethod A reference to the\n     *     overridden method.\n     * @return {function(!Model)}\n     */\n\n  }, {\n    key: 'buildHitTaskOverride',\n    value: function buildHitTaskOverride(originalMethod) {\n      var _this2 = this;\n\n      return function (model) {\n        var cleanedFieldsObj = _this2.cleanUrlFields({\n          location: model.get('location'),\n          page: model.get('page')\n        });\n        model.set(cleanedFieldsObj, null, true);\n        originalMethod(model);\n      };\n    }\n\n    /**\n     * Accepts of fields object containing URL fields and returns a new\n     * fields object with the URLs \"cleaned\" according to the tracker options.\n     * @param {!FieldsObj} fieldsObj\n     * @return {!FieldsObj}\n     */\n\n  }, {\n    key: 'cleanUrlFields',\n    value: function cleanUrlFields(fieldsObj) {\n      var url = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])(\n      /** @type {string} */fieldsObj.page || fieldsObj.location);\n\n      var pathname = url.pathname;\n\n      // If an index filename was provided, remove it if it appears at the end\n      // of the URL.\n      if (this.opts.indexFilename) {\n        var parts = pathname.split('/');\n        if (this.opts.indexFilename == parts[parts.length - 1]) {\n          parts[parts.length - 1] = '';\n          pathname = parts.join('/');\n        }\n      }\n\n      // Ensure the URL ends with or doesn't end with slash based on the\n      // `trailingSlash` option. Note that filename URLs should never contain\n      // a trailing slash.\n      if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n      } else if (this.opts.trailingSlash == 'add') {\n        var isFilename = /\\.\\w+$/.test(pathname);\n        if (!isFilename && pathname.substr(-1) != '/') {\n          pathname = pathname + '/';\n        }\n      }\n\n      /** @type {!FieldsObj} */\n      var cleanedFieldsObj = {\n        page: pathname + (!this.opts.stripQuery ? url.search : '')\n      };\n      if (fieldsObj.location) {\n        cleanedFieldsObj.location = fieldsObj.location;\n      }\n      if (this.queryDimension) {\n        cleanedFieldsObj[this.queryDimension] = url.search.slice(1) || __WEBPACK_IMPORTED_MODULE_1__constants__[\"e\" /* NULL_DIMENSION */];\n      }\n\n      // Apply the `urlFieldsFilter()` option if passed.\n      if (typeof this.opts.urlFieldsFilter == 'function') {\n        /** @type {!FieldsObj} */\n        var userCleanedFieldsObj = this.opts.urlFieldsFilter(cleanedFieldsObj, __WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */]);\n\n        // Ensure only the URL fields are returned.\n        return _defineProperty({\n          page: userCleanedFieldsObj.page,\n          location: userCleanedFieldsObj.location\n        }, this.queryDimension, userCleanedFieldsObj[this.queryDimension]);\n      } else {\n        return cleanedFieldsObj;\n      }\n    }\n\n    /**\n     * Restores all overridden tasks and methods.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].remove(this.tracker, 'get', this.trackerGetOverride);\n      __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n    }\n  }]);\n\n  return CleanUrlTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__provide__[\"a\" /* default */])('cleanUrlTracker', CleanUrlTracker);\n\n/***/ }),\n\n/***/ 366:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(358);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__provide__ = __webpack_require__(355);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__usage__ = __webpack_require__(356);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities__ = __webpack_require__(354);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\n\nvar EventTracker = function () {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  function EventTracker(tracker, opts) {\n    var _this = this;\n\n    _classCallCheck(this, EventTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_2__usage__[\"b\" /* plugins */].EVENT_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {EventTrackerOpts} */\n    var defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-'\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    var selector = '[' + this.opts.attributePrefix + 'on]';\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach(function (event) {\n      _this.delegates[event] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"b\" /* delegate */])(document, event, selector, _this.handleEvents, { composed: true, useCapture: true });\n    });\n  }\n\n  /**\n   * Handles all clicks on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n\n\n  _createClass(EventTracker, [{\n    key: 'handleEvents',\n    value: function handleEvents(event, element) {\n      var prefix = this.opts.attributePrefix;\n\n      // Ensures the event type matches the one specified on the element.\n      if (event.type != element.getAttribute(prefix + 'on')) return;\n\n      /** @type {FieldsObj} */\n      var defaultFields = { transport: 'beacon' };\n      var attributeFields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"h\" /* getAttributeFields */])(element, prefix);\n      var userFields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])({}, this.opts.fieldsObj, attributeFields);\n      var hitType = attributeFields.hitType || 'event';\n\n      this.tracker.send(hitType, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"b\" /* createFieldsObj */])(defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      var _this2 = this;\n\n      Object.keys(this.delegates).forEach(function (key) {\n        _this2.delegates[key].destroy();\n      });\n    }\n  }]);\n\n  return EventTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__provide__[\"a\" /* default */])('eventTracker', EventTracker);\n\n/***/ }),\n\n/***/ 367:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(358);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__provide__ = __webpack_require__(355);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__usage__ = __webpack_require__(356);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities__ = __webpack_require__(354);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/**\n * Class for the `outboundLinkTracker` analytics.js plugin.\n * @implements {OutboundLinkTrackerPublicInterface}\n */\n\nvar OutboundLinkTracker = function () {\n  /**\n   * Registers outbound link tracking on a tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function OutboundLinkTracker(tracker, opts) {\n    var _this = this;\n\n    _classCallCheck(this, OutboundLinkTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_2__usage__[\"b\" /* plugins */].OUTBOUND_LINK_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundLinkTrackerOpts} */\n    var defaultOpts = {\n      events: ['click'],\n      linkSelector: 'a, area',\n      shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n      fieldsObj: {},\n      attributePrefix: 'ga-'\n    };\n\n    this.opts = /** @type {OutboundLinkTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach(function (event) {\n      _this.delegates[event] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"b\" /* delegate */])(document, event, _this.opts.linkSelector, _this.handleLinkInteractions, { composed: true, useCapture: true });\n    });\n  }\n\n  /**\n   * Handles all interactions on link elements. A link is considered an outbound\n   * link if its hostname property does not match location.hostname. When the\n   * beacon transport method is not available, the links target is set to\n   * \"_blank\" to ensure the hit can be sent.\n   * @param {Event} event The DOM click event.\n   * @param {Element} link The delegated event target.\n   */\n\n\n  _createClass(OutboundLinkTracker, [{\n    key: 'handleLinkInteractions',\n    value: function handleLinkInteractions(event, link) {\n      if (this.opts.shouldTrackOutboundLink(link, __WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])) {\n        var href = link.getAttribute('href') || link.getAttribute('xlink:href');\n        var url = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])(href);\n\n        /** @type {FieldsObj} */\n        var defaultFields = {\n          transport: 'beacon',\n          eventCategory: 'Outbound Link',\n          eventAction: event.type,\n          eventLabel: url.href\n        };\n\n        if (!navigator.sendBeacon && linkClickWillUnloadCurrentPage(event, link)) {\n          // Adds a new event handler at the last minute to minimize the chances\n          // that another event handler for this click will run after this logic.\n          window.addEventListener('click', function (event) {\n            // Checks to make sure another event handler hasn't already prevented\n            // the default action. If it has the custom redirect isn't needed.\n            if (!event.defaultPrevented) {\n              // Stops the click and waits until the hit is complete (with\n              // timeout) for browsers that don't support beacon.\n              event.preventDefault();\n              defaultFields.hitCallback = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"g\" /* withTimeout */])(function () {\n                location.href = href;\n              });\n            }\n          });\n        }\n\n        /** @type {FieldsObj} */\n        var userFields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])({}, this.opts.fieldsObj, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"h\" /* getAttributeFields */])(link, this.opts.attributePrefix));\n\n        this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"b\" /* createFieldsObj */])(defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n      }\n    }\n\n    /**\n     * Determines whether or not the tracker should send a hit when a link is\n     * clicked. By default links with a hostname property not equal to the current\n     * hostname are tracked.\n     * @param {Element} link The link that was clicked on.\n     * @param {Function} parseUrlFn A cross-browser utility method for url\n     *     parsing (note: renamed to disambiguate when compiling).\n     * @return {boolean} Whether or not the link should be tracked.\n     */\n\n  }, {\n    key: 'shouldTrackOutboundLink',\n    value: function shouldTrackOutboundLink(link, parseUrlFn) {\n      var href = link.getAttribute('href') || link.getAttribute('xlink:href');\n      var url = parseUrlFn(href);\n      return url.hostname != location.hostname && url.protocol.slice(0, 4) == 'http';\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      var _this2 = this;\n\n      Object.keys(this.delegates).forEach(function (key) {\n        _this2.delegates[key].destroy();\n      });\n    }\n  }]);\n\n  return OutboundLinkTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__provide__[\"a\" /* default */])('outboundLinkTracker', OutboundLinkTracker);\n\n/**\n * Determines if a link click event will cause the current page to upload.\n * Note: most link clicks *will* cause the current page to unload because they\n * initiate a page navigation. The most common reason a link click won't cause\n * the page to unload is if the clicked was to open the link in a new tab.\n * @param {Event} event The DOM event.\n * @param {Element} link The link element clicked on.\n * @return {boolean} True if the current page will be unloaded.\n */\nfunction linkClickWillUnloadCurrentPage(event, link) {\n  return !(\n  // The event type can be customized; we only care about clicks here.\n  event.type != 'click' ||\n  // Links with target=\"_blank\" set will open in a new window/tab.\n  link.target == '_blank' ||\n  // On mac, command clicking will open a link in a new tab. Control\n  // clicking does this on windows.\n  event.metaKey || event.ctrlKey ||\n  // Shift clicking in Chrome/Firefox opens the link in a new window\n  // In Safari it adds the URL to a favorites list.\n  event.shiftKey ||\n  // On Mac, clicking with the option key is used to download a resouce.\n  event.altKey ||\n  // Middle mouse button clicks (which == 2) are used to open a link\n  // in a new tab, and right clicks (which == 3) on Firefox trigger\n  // a click event.\n  event.which > 1);\n}\n\n/***/ }),\n\n/***/ 368:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(357);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__method_chain__ = __webpack_require__(359);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__provide__ = __webpack_require__(355);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__session__ = __webpack_require__(370);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__store__ = __webpack_require__(361);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__usage__ = __webpack_require__(356);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utilities__ = __webpack_require__(354);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\nvar HIDDEN = 'hidden';\nvar VISIBLE = 'visible';\nvar PAGE_ID = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"d\" /* uuid */])();\nvar SECONDS = 1000;\n\n/**\n * Class for the `pageVisibilityTracker` analytics.js plugin.\n * @implements {PageVisibilityTrackerPublicInterface}\n */\n\nvar PageVisibilityTracker = function () {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function PageVisibilityTracker(tracker, opts) {\n    _classCallCheck(this, PageVisibilityTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_5__usage__[\"b\" /* plugins */].PAGE_VISIBILITY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {PageVisibilityTrackerOpts} */\n    var defaultOpts = {\n      sessionTimeout: __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */].DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // visibleMetricIndex: undefined,\n      fieldsObj: {}\n    };\n\n    this.opts = /** @type {PageVisibilityTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n    this.lastPageState = null;\n\n    // Binds methods to `this`.\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleWindowUnload = this.handleWindowUnload.bind(this);\n    this.handleExternalStoreSet = this.handleExternalStoreSet.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = __WEBPACK_IMPORTED_MODULE_4__store__[\"a\" /* default */].getOrCreate(tracker.get('trackingId'), 'plugins/page-visibility-tracker');\n    this.store.on('externalSet', this.handleExternalStoreSet);\n\n    // Creates the session and binds session events.\n    this.session = new __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */](tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].add(tracker, 'set', this.trackerSetOverride);\n\n    document.addEventListener('visibilitychange', this.handleChange);\n    window.addEventListener('unload', this.handleWindowUnload);\n    if (document.visibilityState == VISIBLE) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Inspects the last visibility state change data and determines if a\n   * visibility event needs to be tracked based on the current visibility\n   * state and whether or not the session has expired. If the session has\n   * expired, a change to `visible` will trigger an additional pageview.\n   * This method also sends as the event value (and optionally a custom metric)\n   * the elapsed time between this event and the previously reported change\n   * in the same session, allowing you to more accurately determine when users\n   * were actually looking at your page versus when it was in the background.\n   */\n\n\n  _createClass(PageVisibilityTracker, [{\n    key: 'handleChange',\n    value: function handleChange() {\n      var lastStoredChange = this.validateChangeData(this.store.get());\n\n      /** @type {PageVisibilityStoreData} */\n      var change = {\n        time: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"e\" /* now */])(),\n        state: document.visibilityState,\n        pageId: PAGE_ID\n      };\n\n      if (this.session.isExpired()) {\n        if (document.visibilityState == HIDDEN) {\n          // Hidden events should never be sent if a session has expired (if\n          // they are, they'll likely start a new session with just this event).\n          this.store.clear();\n        } else {\n          // If the session has expired, changes to visible should be considered\n          // a new pageview rather than a visibility event.\n          // This behavior ensures all sessions contain a pageview so\n          // session-level page dimensions and metrics (e.g. ga:landingPagePath\n          // and ga:entrances) are correct.\n\n          /** @type {FieldsObj} */\n          var defaultFields = { transport: 'beacon' };\n          this.tracker.send('pageview', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n\n          this.store.set(change);\n        }\n      } else {\n        if (lastStoredChange.pageId == PAGE_ID && lastStoredChange.state == VISIBLE) {\n          this.sendPageVisibilityEvent(lastStoredChange);\n        }\n        this.store.set(change);\n      }\n\n      this.lastPageState = document.visibilityState;\n    }\n\n    /**\n     * Retroactively updates the stored change data in cases where it's known to\n     * be out of sync.\n     * This plugin keeps track of each visiblity change and stores the last one\n     * in localStorage. LocalStorage is used to handle situations where the user\n     * has multiple page open at the same time and we don't want to\n     * double-report page visibility in those cases.\n     * However, a problem can occur if a user closes a page when one or more\n     * visible pages are still open. In such cases it's impossible to know\n     * which of the remaining pages the user will interact with next.\n     * To solve this problem we wait for the next change on any page and then\n     * retroactively update the stored data to reflect the current page as being\n     * the page on which the last change event occured and measure visibility\n     * from that point.\n     * @param {PageVisibilityStoreData} lastStoredChange\n     * @return {PageVisibilityStoreData}\n     */\n\n  }, {\n    key: 'validateChangeData',\n    value: function validateChangeData(lastStoredChange) {\n      if (this.lastPageState == VISIBLE && lastStoredChange.state == HIDDEN && lastStoredChange.pageId != PAGE_ID) {\n        lastStoredChange.state = VISIBLE;\n        lastStoredChange.pageId = PAGE_ID;\n        this.store.set(lastStoredChange);\n      }\n      return lastStoredChange;\n    }\n\n    /**\n     * Sends a Page Visibility event with the passed event action and visibility\n     * state. If a previous state change exists within the same session, the time\n     * delta is tracked as the event label and optionally as a custom metric.\n     * @param {PageVisibilityStoreData} lastStoredChange\n     * @param {number|undefined=} hitTime A hit timestap used to help ensure\n     *     original order when reporting across multiple windows/tabs.\n     */\n\n  }, {\n    key: 'sendPageVisibilityEvent',\n    value: function sendPageVisibilityEvent(lastStoredChange) {\n      var hitTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        nonInteraction: true,\n        eventCategory: 'Page Visibility',\n        eventAction: 'track',\n        eventLabel: __WEBPACK_IMPORTED_MODULE_0__constants__[\"e\" /* NULL_DIMENSION */]\n      };\n      if (hitTime) {\n        defaultFields.queueTime = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"e\" /* now */])() - hitTime;\n      }\n\n      var delta = this.getTimeSinceLastStoredChange(lastStoredChange, hitTime);\n\n      // If at least a one second delta exists, report it.\n      if (delta) {\n        defaultFields.eventValue = delta;\n\n        // If a custom metric was specified, set it equal to the event value.\n        if (this.opts.visibleMetricIndex) {\n          defaultFields['metric' + this.opts.visibleMetricIndex] = delta;\n        }\n      }\n\n      this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Detects changes to the tracker object and triggers an update if the page\n     * field has changed.\n     * @param {function(...*)} originalMethod A reference to the overridden\n     *     method.\n     * @return {function(...*)}\n     */\n\n  }, {\n    key: 'trackerSetOverride',\n    value: function trackerSetOverride(originalMethod) {\n      var _this = this;\n\n      return function () {\n        /** @type {!FieldsObj} */\n        var fields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"f\" /* isObject */])(arguments.length <= 0 ? undefined : arguments[0]) ? arguments.length <= 0 ? undefined : arguments[0] : _defineProperty({}, arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n        if (fields.page && fields.page !== _this.tracker.get('page')) {\n          if (_this.lastPageState == VISIBLE) {\n            _this.handleChange();\n          }\n        }\n        originalMethod.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * Calculates the time since the last visibility change event in the current\n     * session. If the session has expired the reported time is zero.\n     * @param {PageVisibilityStoreData} lastStoredChange\n     * @param {number=} hitTime The timestamp of the current hit, defaulting\n     *     to now.\n     * @return {number} The time (in ms) since the last change.\n     */\n\n  }, {\n    key: 'getTimeSinceLastStoredChange',\n    value: function getTimeSinceLastStoredChange(lastStoredChange) {\n      var hitTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"e\" /* now */])();\n\n      var isSessionActive = !this.session.isExpired();\n      var timeSinceLastStoredChange = lastStoredChange.time && Math.round((hitTime - lastStoredChange.time) / SECONDS);\n\n      return isSessionActive && timeSinceLastStoredChange > 0 ? timeSinceLastStoredChange : 0;\n    }\n\n    /**\n     * Handles responding to the `storage` event.\n     * The code on this page needs to be informed when other tabs or windows are\n     * updating the stored page visibility state data. This method checks to see\n     * if a hidden state is stored when there are still visible tabs open, which\n     * can happen if multiple windows are open at the same time.\n     * @param {PageVisibilityStoreData} newData\n     * @param {PageVisibilityStoreData} oldData\n     */\n\n  }, {\n    key: 'handleExternalStoreSet',\n    value: function handleExternalStoreSet(newData, oldData) {\n      // If the change times are the same, then the previous write only\n      // updated the active page ID. It didn't enter a new state and thus no\n      // hits should be sent.\n      if (newData.time == oldData.time) return;\n\n      // Page Visibility events must be sent by the tracker on the page\n      // where the original event occurred. So if a change happens on another\n      // page, but this page is where the previous change event occurred, then\n      // this page is the one that needs to send the event (so all dimension\n      // data is correct).\n      if (oldData.pageId == PAGE_ID && oldData.state == VISIBLE) {\n        this.sendPageVisibilityEvent(oldData, newData.time);\n      }\n    }\n\n    /**\n     * Handles responding to the `unload` event.\n     * Since some browsers don't emit a `visibilitychange` event in all cases\n     * where a page might be unloaded, it's necessary to hook into the `unload`\n     * event to ensure the correct state is always stored.\n     */\n\n  }, {\n    key: 'handleWindowUnload',\n    value: function handleWindowUnload() {\n      // If the stored visibility state isn't hidden when the unload event\n      // fires, it means the visibilitychange event didn't fire as the document\n      // was being unloaded, so we invoke it manually.\n      if (this.lastPageState != HIDDEN) {\n        this.handleChange();\n      }\n    }\n\n    /**\n     * Removes all event listeners and restores overridden methods.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      this.session.destroy();\n      __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].remove(this.tracker, 'set', this.trackerSetOverride);\n      window.removeEventListener('unload', this.handleWindowUnload);\n      document.removeEventListener('visibilitychange', this.handleChange);\n    }\n  }]);\n\n  return PageVisibilityTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__provide__[\"a\" /* default */])('pageVisibilityTracker', PageVisibilityTracker);\n\n/***/ }),\n\n/***/ 369:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__provide__ = __webpack_require__(355);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__usage__ = __webpack_require__(356);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities__ = __webpack_require__(354);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * Class for the `socialWidgetTracker` analytics.js plugin.\n * @implements {SocialWidgetTrackerPublicInterface}\n */\n\nvar SocialWidgetTracker = function () {\n  /**\n   * Registers social tracking on tracker object.\n   * Supports both declarative social tracking via HTML attributes as well as\n   * tracking for social events when using official Twitter or Facebook widgets.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function SocialWidgetTracker(tracker, opts) {\n    _classCallCheck(this, SocialWidgetTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_1__usage__[\"b\" /* plugins */].SOCIAL_WIDGET_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {SocialWidgetTrackerOpts} */\n    var defaultOpts = {\n      fieldsObj: {},\n      hitFilter: null\n    };\n\n    this.opts = /** @type {SocialWidgetTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    // Binds methods to `this`.\n    this.addWidgetListeners = this.addWidgetListeners.bind(this);\n    this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n    this.handleTweetEvents = this.handleTweetEvents.bind(this);\n    this.handleFollowEvents = this.handleFollowEvents.bind(this);\n    this.handleLikeEvents = this.handleLikeEvents.bind(this);\n    this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n    if (document.readyState != 'complete') {\n      // Adds the widget listeners after the window's `load` event fires.\n      // If loading widgets using the officially recommended snippets, they\n      // will be available at `window.load`. If not users can call the\n      // `addWidgetListeners` method manually.\n      window.addEventListener('load', this.addWidgetListeners);\n    } else {\n      this.addWidgetListeners();\n    }\n  }\n\n  /**\n   * Invokes the methods to add Facebook and Twitter widget event listeners.\n   * Ensures the respective global namespaces are present before adding.\n   */\n\n\n  _createClass(SocialWidgetTracker, [{\n    key: 'addWidgetListeners',\n    value: function addWidgetListeners() {\n      if (window.FB) this.addFacebookEventHandlers();\n      if (window.twttr) this.addTwitterEventHandlers();\n    }\n\n    /**\n     * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n     * official tweet and follow buttons. Note: this does not capture tweet or\n     * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n     */\n\n  }, {\n    key: 'addTwitterEventHandlers',\n    value: function addTwitterEventHandlers() {\n      var _this = this;\n\n      try {\n        window.twttr.ready(function () {\n          window.twttr.events.bind('tweet', _this.handleTweetEvents);\n          window.twttr.events.bind('follow', _this.handleFollowEvents);\n        });\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n     * official tweet and follow buttons.\n     */\n\n  }, {\n    key: 'removeTwitterEventHandlers',\n    value: function removeTwitterEventHandlers() {\n      var _this2 = this;\n\n      try {\n        window.twttr.ready(function () {\n          window.twttr.events.unbind('tweet', _this2.handleTweetEvents);\n          window.twttr.events.unbind('follow', _this2.handleFollowEvents);\n        });\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n     * official Facebook like button.\n     */\n\n  }, {\n    key: 'addFacebookEventHandlers',\n    value: function addFacebookEventHandlers() {\n      try {\n        window.FB.Event.subscribe('edge.create', this.handleLikeEvents);\n        window.FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n     * official Facebook like button.\n     */\n\n  }, {\n    key: 'removeFacebookEventHandlers',\n    value: function removeFacebookEventHandlers() {\n      try {\n        window.FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n        window.FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Handles `tweet` events emitted by the Twitter JS SDK.\n     * @param {TwttrEvent} event The Twitter event object passed to the handler.\n     */\n\n  }, {\n    key: 'handleTweetEvents',\n    value: function handleTweetEvents(event) {\n      // Ignores tweets from widgets that aren't the tweet button.\n      if (event.region != 'tweet') return;\n\n      var url = event.data.url || event.target.getAttribute('data-url') || location.href;\n\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Twitter',\n        socialAction: 'tweet',\n        socialTarget: url\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Handles `follow` events emitted by the Twitter JS SDK.\n     * @param {TwttrEvent} event The Twitter event object passed to the handler.\n     */\n\n  }, {\n    key: 'handleFollowEvents',\n    value: function handleFollowEvents(event) {\n      // Ignore follows from widgets that aren't the follow button.\n      if (event.region != 'follow') return;\n\n      var screenName = event.data.screen_name || event.target.getAttribute('data-screen-name');\n\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Twitter',\n        socialAction: 'follow',\n        socialTarget: screenName\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Handles `like` events emitted by the Facebook JS SDK.\n     * @param {string} url The URL corresponding to the like event.\n     */\n\n  }, {\n    key: 'handleLikeEvents',\n    value: function handleLikeEvents(url) {\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Facebook',\n        socialAction: 'like',\n        socialTarget: url\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Handles `unlike` events emitted by the Facebook JS SDK.\n     * @param {string} url The URL corresponding to the unlike event.\n     */\n\n  }, {\n    key: 'handleUnlikeEvents',\n    value: function handleUnlikeEvents(url) {\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Facebook',\n        socialAction: 'unlike',\n        socialTarget: url\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      window.removeEventListener('load', this.addWidgetListeners);\n      this.removeFacebookEventHandlers();\n      this.removeTwitterEventHandlers();\n    }\n  }]);\n\n  return SocialWidgetTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__provide__[\"a\" /* default */])('socialWidgetTracker', SocialWidgetTracker);\n\n/***/ }),\n\n/***/ 370:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__method_chain__ = __webpack_require__(359);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__store__ = __webpack_require__(361);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities__ = __webpack_require__(354);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nvar SECONDS = 1000;\nvar MINUTES = 60 * SECONDS;\n\nvar instances = {};\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\n\nvar Session = function () {\n  _createClass(Session, null, [{\n    key: 'getOrCreate',\n\n    /**\n     * Gets an existing instance for the passed arguments or creates a new\n     * instance if one doesn't exist.\n     * @param {!Tracker} tracker An analytics.js tracker object.\n     * @param {number} timeout The session timeout (in minutes). This value\n     *     should match what's set in the \"Session settings\" section of the\n     *     Google Analytics admin.\n     * @param {string=} timeZone The optional IANA time zone of the view. This\n     *     value should match what's set in the \"View settings\" section of the\n     *     Google Analytics admin. (Note: this assumes all views for the property\n     *     use the same time zone. If that's not true, it's better not to use\n     *     this feature).\n     * @return {Session} The Session instance.\n     */\n    value: function getOrCreate(tracker, timeout, timeZone) {\n      // Don't create multiple instances for the same property.\n      var trackingId = tracker.get('trackingId');\n      if (instances[trackingId]) {\n        return instances[trackingId];\n      } else {\n        return instances[trackingId] = new Session(tracker, timeout, timeZone);\n      }\n    }\n\n    /**\n     * @param {!Tracker} tracker An analytics.js tracker object.\n     * @param {number} timeout The session timeout (in minutes). This value\n     *     should match what's set in the \"Session settings\" section of the\n     *     Google Analytics admin.\n     * @param {string=} timeZone The optional IANA time zone of the view. This\n     *     value should match what's set in the \"View settings\" section of the\n     *     Google Analytics admin. (Note: this assumes all views for the property\n     *     use the same time zone. If that's not true, it's better not to use\n     *     this feature).\n     */\n\n  }]);\n\n  function Session(tracker, timeout, timeZone) {\n    _classCallCheck(this, Session);\n\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Overrides into the trackers sendHitTask method.\n    __WEBPACK_IMPORTED_MODULE_0__method_chain__[\"a\" /* default */].add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n\n    // Some browser doesn't support various features of the\n    // `Intl.DateTimeFormat` API, so we have to try/catch it. Consequently,\n    // this allows us to assume the presence of `this.dateTimeFormatter` means\n    // it works in the current browser.\n    try {\n      this.dateTimeFormatter = new Intl.DateTimeFormat('en-US', { timeZone: this.timeZone });\n    } catch (err) {}\n    // Do nothing.\n\n\n    // Creates the session store and adds change listeners.\n    /** @type {SessionStoreData} */\n    var defaultProps = {\n      hitTime: 0,\n      isExpired: false\n    };\n    this.store = __WEBPACK_IMPORTED_MODULE_1__store__[\"a\" /* default */].getOrCreate(tracker.get('trackingId'), 'session', defaultProps);\n  }\n\n  /**\n   * Accepts a tracker object and returns whether or not the session for that\n   * tracker has expired. A session can expire for two reasons:\n   *   - More than 30 minutes has elapsed since the previous hit\n   *     was sent (The 30 minutes number is the Google Analytics default, but\n   *     it can be modified in GA admin \"Session settings\").\n   *   - A new day has started since the previous hit, in the\n   *     specified time zone (should correspond to the time zone of the\n   *     property's views).\n   *\n   * Note: since real session boundaries are determined at processing time,\n   * this is just a best guess rather than a source of truth.\n   *\n   * @param {SessionStoreData=} sessionData An optional sessionData object\n   *     which avoids an additional localStorage read if the data is known to\n   *     be fresh.\n   * @return {boolean} True if the session has expired.\n   */\n\n\n  _createClass(Session, [{\n    key: 'isExpired',\n    value: function isExpired() {\n      var sessionData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.store.get();\n\n      // True if the sessionControl field was set to 'end' on the previous hit.\n      if (sessionData.isExpired) return true;\n\n      var currentDate = new Date();\n      var oldHitTime = sessionData.hitTime;\n      var oldHitDate = oldHitTime && new Date(oldHitTime);\n\n      if (oldHitTime) {\n        if (currentDate - oldHitDate > this.timeout * MINUTES) {\n          // If more time has elapsed than the session expiry time,\n          // the session has expired.\n          return true;\n        } else if (this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n          // A new day has started since the previous hit, which means the\n          // session has expired.\n          return true;\n        }\n      }\n\n      // For all other cases return false.\n      return false;\n    }\n\n    /**\n     * Returns true if (and only if) the timezone date formatting is supported\n     * in the current browser and if the two dates are diffinitiabely not the\n     * same date in the session timezone. Anything short of this returns false.\n     * @param {!Date} d1\n     * @param {!Date} d2\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'datesAreDifferentInTimezone',\n    value: function datesAreDifferentInTimezone(d1, d2) {\n      if (!this.dateTimeFormatter) {\n        return false;\n      } else {\n        return this.dateTimeFormatter.format(d1) != this.dateTimeFormatter.format(d2);\n      }\n    }\n\n    /**\n     * Keeps track of when the previous hit was sent to determine if a session\n     * has expired. Also inspects the `sessionControl` field to handles\n     * expiration accordingly.\n     * @param {function(!Model)} originalMethod A reference to the overridden\n     *     method.\n     * @return {function(!Model)}\n     */\n\n  }, {\n    key: 'sendHitTaskOverride',\n    value: function sendHitTaskOverride(originalMethod) {\n      var _this = this;\n\n      return function (model) {\n        originalMethod(model);\n\n        var sessionData = _this.store.get();\n        var isSessionExpired = _this.isExpired(sessionData);\n        var sessionControl = model.get('sessionControl');\n\n        var sessionWillStart = sessionControl == 'start' || isSessionExpired;\n        var sessionWillEnd = sessionControl == 'end';\n\n        // Update the stored session data.\n        sessionData.hitTime = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"e\" /* now */])();\n        if (sessionWillStart) {\n          sessionData.isExpired = false;\n        }\n        if (sessionWillEnd) {\n          sessionData.isExpired = true;\n        }\n        _this.store.set(sessionData);\n      };\n    }\n\n    /**\n     * Restores the tracker's original `sendHitTask` to the state before\n     * session control was initialized and removes this instance from the global\n     * store.\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      __WEBPACK_IMPORTED_MODULE_0__method_chain__[\"a\" /* default */].remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n      this.store.destroy();\n      delete instances[this.tracker.get('trackingId')];\n    }\n  }]);\n\n  return Session;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = Session;\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n\n/***/ }),\n\n/***/ 371:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__closest__ = __webpack_require__(362);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__matches__ = __webpack_require__(360);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = delegate;\n\n\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nfunction delegate(ancestor, eventType, selector, callback) {\n  var opts = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  // Defines the event listener.\n  var listener = function listener(event) {\n    var delegateTarget = void 0;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      var composedPath = event.composedPath();\n      for (var i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__matches__[\"a\" /* default */])(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__closest__[\"a\" /* default */])(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function destroy() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 372:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Dispatches an event on the passed element.\n * @param {!Element} element The DOM element to dispatch the event on.\n * @param {string} eventType The type of event to dispatch.\n * @param {Object|string=} eventName A string name of the event constructor\n *     to use. Defaults to 'Event' if nothing is passed or 'CustomEvent' if\n *     a value is set on `initDict.detail`. If eventName is given an object\n *     it is assumed to be initDict and thus reassigned.\n * @param {Object=} initDict The initialization attributes for the\n *     event. A `detail` property can be used here to pass custom data.\n * @return {boolean} The return value of `element.dispatchEvent`, which will\n *     be false if any of the event listeners called `preventDefault`.\n */\nfunction dispatch(element, eventType) {\n  var eventName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Event';\n  var initDict = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var event = void 0;\n  var isCustom = void 0;\n\n  // eventName is optional\n  if ((typeof eventName === 'undefined' ? 'undefined' : _typeof(eventName)) == 'object') {\n    initDict = eventName;\n    eventName = 'Event';\n  }\n\n  initDict.bubbles = initDict.bubbles || false;\n  initDict.cancelable = initDict.cancelable || false;\n  initDict.composed = initDict.composed || false;\n\n  // If a detail property is passed, this is a custom event.\n  if ('detail' in initDict) isCustom = true;\n  eventName = isCustom ? 'CustomEvent' : eventName;\n\n  // Tries to create the event using constructors, if that doesn't work,\n  // fallback to `document.createEvent()`.\n  try {\n    event = new window[eventName](eventType, initDict);\n  } catch (err) {\n    event = document.createEvent(eventName);\n    var initMethod = 'init' + (isCustom ? 'Custom' : '') + 'Event';\n    event[initMethod](eventType, initDict.bubbles, initDict.cancelable, initDict.detail);\n  }\n\n  return element.dispatchEvent(event);\n}\n\n/***/ }),\n\n/***/ 373:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getAttributes;\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nfunction getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n\n/***/ }),\n\n/***/ 374:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parseUrl;\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\nvar a = document.createElement('a');\nvar cache = {};\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nfunction parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = !url || url == '.' ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  var port = a.port == HTTP_PORT || a.port == HTTPS_PORT ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  var host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search\n  };\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.js","// Import the individual autotrack plugins you want to use.\nimport 'autotrack/lib/plugins/clean-url-tracker';\nimport 'autotrack/lib/plugins/event-tracker';\nimport 'autotrack/lib/plugins/outbound-link-tracker';\nimport 'autotrack/lib/plugins/page-visibility-tracker';\nimport 'autotrack/lib/plugins/social-widget-tracker';\n\n\n/* global ga */\n\n\n/**\n * The tracking ID for your Google Analytics property.\n * https://support.google.com/analytics/answer/1032385\n */\nconst TRACKING_ID = 'UA-40829935-6';\n\n\n/**\n * Bump this when making backwards incompatible changes to the tracking\n * implementation. This allows you to create a segment or view filter\n * that isolates only data captured with the most recent tracking changes.\n */\nconst TRACKING_VERSION = '1';\n\n\n/**\n * A default value for dimensions so unset values always are reported as\n * something. This is needed since Google Analytics will drop empty dimension\n * values in reports.\n */\nconst NULL_VALUE = '(not set)';\n\n\n/**\n * A maping between custom dimension names and their indexes.\n */\nconst dimensions = {\n  TRACKING_VERSION: 'dimension1',\n  CLIENT_ID: 'dimension2',\n  WINDOW_ID: 'dimension3',\n  HIT_ID: 'dimension4',\n  HIT_TIME: 'dimension5',\n  HIT_TYPE: 'dimension6',\n  HIT_SOURCE: 'dimension7',\n  VISIBILITY_STATE: 'dimension8',\n  URL_QUERY_PARAMS: 'dimension9',\n  REPORT_METRIC: 'dimension10',\n  REPORT_DIMENSION: 'dimension11',\n  REPORT_DATE_RANGE: 'dimension12',\n  REPORT_MAX_RESULTS: 'dimension13',\n  SIGNED_IN: 'dimension14',\n};\n\n\n/**\n * A maping between custom dimension names and their indexes.\n */\nconst metrics = {\n  RESPONSE_END_TIME: 'metric1',\n  DOM_LOAD_TIME: 'metric2',\n  WINDOW_LOAD_TIME: 'metric3',\n  PAGE_VISIBLE: 'metric4',\n  JS_CLIENT_LOAD_TIME: 'metric5',\n};\n\n\n/**\n * Initializes all the analytics setup. Creates trackers and sets initial\n * values on the trackers.\n * @param {!Object} state\n */\nexport const init = (state = {}) => {\n  // Initialize the command queue in case analytics.js hasn't loaded yet.\n  window.ga = window.ga || ((...args) => (ga.q = ga.q || []).push(args));\n\n  createTracker();\n  trackErrors();\n  trackCustomDimensions(state);\n  requireAutotrackPlugins();\n  sendInitialPageview();\n  sendNavigationTimingMetrics();\n};\n\n\n/**\n * Tracks a JavaScript error with optional fields object overrides.\n * This function is exported so it can be used in other parts of the codebase.\n * E.g.:\n *\n *    `fetch('/api.json').catch(trackError);`\n *\n * @param {Error|undefined} error\n * @param {Object=} fieldsObj\n */\nexport const trackError = (error, fieldsObj = {}) => {\n  ga('send', 'event', Object.assign({\n    eventCategory: 'Script',\n    eventAction: 'error',\n    eventLabel: (error && error.stack) || NULL_VALUE,\n    nonInteraction: true,\n  }, fieldsObj));\n};\n\n\nexport const trackJsClientLoadTime = (loadTime) => {\n  const roundedLoadTime = Math.round(loadTime);\n  ga('send', 'event', {\n    eventCategory: 'Google JS Client',\n    eventAction: 'load',\n    eventLabel: NULL_VALUE,\n    eventValue: roundedLoadTime,\n    [metrics.JS_CLIENT_LOAD_TIME]: roundedLoadTime,\n    nonInteraction: true,\n  });\n};\n\n\nexport const trackNoGoogleAnalyticsAccounts = () => {\n  ga('send', 'event', 'Google Analytics', 'error', 'no accounts');\n};\n\n\nexport const updateParams = (fieldName, paramValues) => {\n  ga('set', {\n    [dimensions.REPORT_METRIC]: paramValues.metric,\n    [dimensions.REPORT_DIMENSION]: paramValues.dimension,\n    [dimensions.REPORT_DATE_RANGE]: String(paramValues.dateRange),\n    [dimensions.REPORT_MAX_RESULTS]: String(paramValues.maxResults),\n  });\n  ga('send', 'event', 'Report', 'update', fieldName);\n};\n\n\nexport const trackCreateReport = () => {\n  ga('send', 'event', 'Report', 'create', NULL_VALUE);\n};\n\n\nexport const trackReportError = (err) => {\n  ga('send', 'event', 'Report', 'error', {\n    eventLabel: `(${err.code}: ${err.status}) ${err.message}`,\n  });\n};\n\n\n// TODO(philipwalton): implement JS client timeout and error tracking.\n// export const trackJsClientLoadError = (err) => {\n//   ga('send', 'event', {\n//     eventCategory: 'Google JS Client',\n//     eventAction: 'error',\n//     eventLabel: err.message,\n//     nonInteraction: true,\n//   });\n// };\n// export const trackJsClientLoadTimeout = (err) => {\n//   ga('send', 'event', {\n//     eventCategory: 'Google JS Client',\n//     eventAction: 'timeout',\n//     eventLabel: NULL_VALUE,\n//     nonInteraction: true,\n//   });\n// };\n\n\n/**\n * Creates the trackers and sets the default transport and tracking\n * version fields. In non-production environments it also logs hits.\n */\nconst createTracker = () => {\n  ga('create', TRACKING_ID, 'auto');\n\n  // Ensures all hits are sent via `navigator.sendBeacon()`.\n  ga('set', 'transport', 'beacon');\n};\n\n\n/**\n * Tracks any errors that may have occured on the page prior to analytics being\n * initialized, then adds an event handler to track future errors.\n */\nconst trackErrors = () => {\n  // Errors that have occurred prior to this script running are stored on\n  // `window.__e.q`, as specified in `index.html`.\n  const loadErrorEvents = window.__e && window.__e.q || [];\n\n  // Use a different eventAction for uncaught errors.\n  const fieldsObj = {eventAction: 'uncaught error'};\n\n  // Replay any stored load error events.\n  for (let event of loadErrorEvents) {\n    trackError(event.error, fieldsObj);\n  }\n\n  // Add a new listener to track event immediately.\n  window.addEventListener('error', (event) => {\n    trackError(event.error, fieldsObj);\n  });\n};\n\n\n/**\n * Sets a default dimension value for all custom dimensions on all trackers.\n * @param {!Object} state\n */\nconst trackCustomDimensions = (state = {}) => {\n  const {params, auth} = state;\n\n  // Sets a default dimension value for all custom dimensions to ensure\n  // that every dimension in every hit has *some* value. This is necessary\n  // because Google Analytics will drop rows with empty dimension values\n  // in your reports.\n  Object.keys(dimensions).forEach((key) => {\n    ga('set', dimensions[key], NULL_VALUE);\n  });\n\n  // Adds tracking of dimensions known at page load time.\n  ga((tracker) => {\n    tracker.set({\n      [dimensions.TRACKING_VERSION]: TRACKING_VERSION,\n      [dimensions.CLIENT_ID]: tracker.get('clientId'),\n      [dimensions.WINDOW_ID]: uuid(),\n\n      [dimensions.SIGNED_IN]: String(auth.isSignedIn),\n      [dimensions.REPORT_METRIC]: params.metric,\n      [dimensions.REPORT_DIMENSION]: params.dimension,\n      [dimensions.REPORT_DATE_RANGE]: String(params.dateRange),\n      [dimensions.REPORT_MAX_RESULTS]: String(params.maxResults),\n    });\n  });\n\n  // Adds tracking to record each the type, time, uuid, and visibility state\n  // of each hit immediately before it's sent.\n  ga((tracker) => {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    tracker.set('buildHitTask', (model) => {\n      model.set(dimensions.HIT_ID, uuid(), true);\n      model.set(dimensions.HIT_TIME, String(+new Date), true);\n      model.set(dimensions.HIT_TYPE, model.get('hitType'), true);\n      model.set(dimensions.VISIBILITY_STATE, document.visibilityState, true);\n\n      originalBuildHitTask(model);\n    });\n  });\n};\n\n\n/**\n * Requires select autotrack plugins and initializes each one with its\n * respective configuration options.\n */\nconst requireAutotrackPlugins = () => {\n  ga('require', 'cleanUrlTracker', {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    trailingSlash: 'remove',\n  });\n  ga('require', 'eventTracker', {\n    attributePrefix: 'data-',\n  });\n  ga('require', 'outboundLinkTracker', {\n    events: ['click', 'contextmenu'],\n  });\n  ga('require', 'pageVisibilityTracker', {\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    sessionTimeout: 30,\n    timeZone: 'America/Los_Angeles',\n    fieldsObj: {[dimensions.HIT_SOURCE]: 'pageVisibilityTracker'},\n  });\n  ga('require', 'socialWidgetTracker');\n};\n\n\n/**\n * Sends the initial pageview to Google Analytics.\n */\nconst sendInitialPageview = () => {\n  ga('send', 'pageview', {[dimensions.HIT_SOURCE]: 'pageload'});\n};\n\n\n/**\n * Gets the DOM and window load times and sends them as custom metrics to\n * Google Analytics via an event hit.\n */\nconst sendNavigationTimingMetrics = () => {\n  // Only track performance in supporting browsers.\n  if (!(window.performance && window.performance.timing)) return;\n\n  // If the window hasn't loaded, run this function after the `load` event.\n  if (document.readyState != 'complete') {\n    window.addEventListener('load', sendNavigationTimingMetrics);\n    return;\n  }\n\n  const nt = performance.timing;\n  const navStart = nt.navigationStart;\n\n  const responseEnd = Math.round(nt.responseEnd - navStart);\n  const domLoaded = Math.round(nt.domContentLoadedEventStart - navStart);\n  const windowLoaded = Math.round(nt.loadEventStart - navStart);\n\n  // In some edge cases browsers return very obviously incorrect NT values,\n  // e.g. 0, negative, or future times. This validates values before sending.\n  const allValuesAreValid = (...values) => {\n    return values.every((value) => value > 0 && value < 6e6);\n  };\n\n  if (allValuesAreValid(responseEnd, domLoaded, windowLoaded)) {\n    ga('send', 'event', {\n      eventCategory: 'Navigation Timing',\n      eventAction: 'track',\n      nonInteraction: true,\n      [metrics.RESPONSE_END_TIME]: responseEnd,\n      [metrics.DOM_LOAD_TIME]: domLoaded,\n      [metrics.WINDOW_LOAD_TIME]: windowLoaded,\n    });\n  }\n};\n\n\n/**\n * Accepts a custom dimension or metric and returns it's numerical index.\n * @param {string} definition The definition string (e.g. 'dimension1').\n * @return {number} The definition index.\n */\nconst getDefinitionIndex = (definition) => +/\\d+$/.exec(definition)[0];\n\n\n/**\n * Generates a UUID.\n * https://gist.github.com/jed/982883\n * @param {string|undefined=} a\n * @return {string}\n */\nconst uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) :\n      ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/analytics.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(defaultFields, userFields,\n    tracker = undefined, hitFilter = undefined, target = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...Object} sources Additional objects who properties should be\n *     assigned to target.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let source, i = 0; source = sources[i]; i++) {\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/utilities.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/provide.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/usage.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.0.1';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/constants.js","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\n\nconst instances = [];\n\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\nexport default class MethodChain {\n  /**\n   * Adds the passed override method to the list of method chain overrides.\n   * @param {!Object} context The object containing the method to chain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to add.\n   */\n  static add(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).add(methodOverride);\n  }\n\n  /**\n   * Removes a method chain added via `add()`. If the override is the\n   * only override added, the original method is restored.\n   * @param {!Object} context The object containing the method to unchain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to remove.\n   */\n  static remove(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).remove(methodOverride)\n  }\n\n  /**\n   * Wraps a foreign object method and overrides it. Also stores a reference\n   * to the original method so it can be restored later.\n   * @param {!Object} context The object containing the method.\n   * @param {string} methodName The name of the method on the object.\n   */\n  constructor(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ?\n        context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = (...args) => {\n      const lastBoundMethod =\n          this.boundMethodChain[this.boundMethodChain.length - 1];\n\n      return lastBoundMethod(...args);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n  add(overrideMethod) {\n    this.methodChain.push(overrideMethod);\n    this.rebindMethodChain();\n  }\n\n  /**\n   * Removes a method from the method chain and restores the prior order.\n   * @param {!Function} overrideMethod The override method to remove.\n   */\n  remove(overrideMethod) {\n    const index = this.methodChain.indexOf(overrideMethod);\n    if (index > -1) {\n      this.methodChain.splice(index, 1);\n      if (this.methodChain.length > 0) {\n        this.rebindMethodChain();\n      } else {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * Loops through the method chain array and recreates the bound method\n   * chain array. This is necessary any time a method is added or removed\n   * to ensure proper original method context and order.\n   */\n  rebindMethodChain() {\n    this.boundMethodChain = [];\n    for (let method, i = 0; method = this.methodChain[i]; i++) {\n      const previousMethod = this.boundMethodChain[i - 1] ||\n          this.originalMethodReference.bind(this.context);\n      this.boundMethodChain.push(method(previousMethod));\n    }\n  }\n\n  /**\n   * Calls super and destroys the instance if no registered handlers remain.\n   */\n  destroy() {\n    const index = instances.indexOf(this);\n    if (index > -1) {\n      instances.splice(index, 1);\n      if (this.isTask) {\n        this.context.set(this.methodName, this.originalMethodReference);\n      } else {\n        this.context[this.methodName] = this.originalMethodReference;\n      }\n    }\n  }\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\nfunction getOrCreateMethodChain(context, methodName) {\n  let methodChain = instances\n      .filter((h) => h.context == context && h.methodName == methodName)[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/method-chain.js","const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/matches.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport EventEmitter from './event-emitter';\nimport {assign} from './utilities';\n\n\nconst AUTOTRACK_PREFIX = 'autotrack';\nconst instances = {};\nlet isListening = false;\n\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\nexport default class Store extends EventEmitter {\n  /**\n   * Gets an existing instance for the passed arguements or creates a new\n   * instance if one doesn't exist.\n   * @param {string} trackingId The tracking ID for the GA property.\n   * @param {string} namespace A namespace unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   * @return {Store} The Store instance.\n   */\n  static getOrCreate(trackingId, namespace, defaults) {\n    const key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n    // Don't create multiple instances for the same tracking Id and namespace.\n    if (!instances[key]) {\n      instances[key] = new Store(key, defaults);\n      instances[key].key = key;\n      if (!isListening) initStorageListener();\n    }\n    return instances[key];\n  }\n\n  /**\n   * @param {string} key A key unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   */\n  constructor(key, defaults) {\n    super();\n    this.key = key;\n    this.defaults = defaults || {};\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n  get() {\n    const storedItem = String(window.localStorage &&\n        window.localStorage.getItem(this.key));\n\n    if (typeof storedItem != 'string') return {};\n    // TODO(philipwalton): Implement schema migrations if/when a new\n    // schema version is introduced.\n    return parse(storedItem, this.defaults);\n  }\n\n  /**\n   * Saves the passed data object to localStorage,\n   * merging it with the existing data.\n   * @param {Object} newData The data to save.\n   */\n  set(newData) {\n    const oldData = this.get();\n    const mergedData = assign(oldData, newData);\n    window.localStorage &&\n        window.localStorage.setItem(this.key, JSON.stringify(mergedData));\n  }\n\n  /**\n   * Clears the data in localStorage for the current store.\n   */\n  clear() {\n    window.localStorage && window.localStorage.removeItem(this.key);\n  }\n\n  /**\n   * Removes the store instance for the global instances map. If this is the\n   * last store instance, the storage listener is also removed.\n   * Note: this does not erase the stored data. Use `clear()` for that.\n   */\n  destroy() {\n    delete instances[this.key];\n    if (!Object.keys(instances).length) {\n      removeStorageListener();\n    }\n  }\n}\n\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  const store = instances[event.key];\n  if (store) {\n    const oldData = parse(event.oldValue, store.defaults);\n    const newData = parse(event.newValue, store.defaults);\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n\n/**\n * Parses a source string as JSON and merges the result with the passed\n * defaults object. If an error occurs while\n * @param {string} source A JSON string of data.\n * @param {!Object} defaults An object of key/value defaults.\n * @return {!Object} The parsed data object merged with the passed defaults.\n */\nfunction parse(source, defaults) {\n  let data;\n  try {\n    data = /** @type {!Object} */ (JSON.parse(source));\n  } catch(err) {\n    data = {};\n  }\n  return assign({}, defaults, data);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/store.js","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/closest.js","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/parents.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nexport default class EventEmitter {\n  /**\n   * Creates the event registry.\n   */\n  constructor() {\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n  on(event, fn) {\n    this.getRegistry_(event).push(fn);\n  }\n\n  /**\n   * Removes a handler function from the registry for the passed event.\n   * @param {string=} event The event name.\n   * @param {Function=} fn The handler to be removed.\n   */\n  off(event = undefined, fn = undefined) {\n    if (event && fn) {\n      const eventRegistry = this.getRegistry_(event);\n      const handlerIndex = eventRegistry.indexOf(fn);\n      if (handlerIndex > -1) {\n        eventRegistry.splice(handlerIndex, 1);\n      }\n    } else {\n      this.registry_ = {};\n    }\n  }\n\n  /**\n   * Runs all registered handlers for the passed event with the optional args.\n   * @param {string} event The event name.\n   * @param {...*} args The arguments to be passed to the handler.\n   */\n  emit(event, ...args) {\n    this.getRegistry_(event).forEach((fn) => fn(...args));\n  }\n\n  /**\n   * Returns the total number of event handlers currently registered.\n   * @return {number}\n   */\n  getEventCount() {\n    let eventCount = 0;\n    Object.keys(this.registry_).forEach((event) => {\n      eventCount += this.getRegistry_(event).length;\n    });\n    return eventCount;\n  }\n\n  /**\n   * Returns an array of handlers associated with the passed event name.\n   * If no handlers have been registered, an empty array is returned.\n   * @private\n   * @param {string} event The event name.\n   * @return {!Array} An array of handler functions.\n   */\n  getRegistry_(event) {\n    return this.registry_[event] = (this.registry_[event] || []);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/event-emitter.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign} from '../utilities';\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\nclass CleanUrlTracker {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    const defaultOpts = {\n      // stripQuery: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery &&\n        this.opts.queryDimensionIndex ?\n            `dimension${this.opts.queryDimensionIndex}` : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    MethodChain.add(tracker, 'get', this.trackerGetOverride);\n    MethodChain.add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n  trackerGetOverride(originalMethod) {\n    return (field) => {\n      if (field == 'page' || field == this.queryDimension) {\n        const fieldsObj = /** @type {!FieldsObj} */ ({\n          location: originalMethod('location'),\n          page: originalMethod('page'),\n        });\n        const cleanedFieldsObj = this.cleanUrlFields(fieldsObj);\n        return cleanedFieldsObj[field];\n      } else {\n        return originalMethod(field);\n      }\n    };\n  }\n\n  /**\n   * Cleans URL fields passed in a send command.\n   * @param {function(!Model)} originalMethod A reference to the\n   *     overridden method.\n   * @return {function(!Model)}\n   */\n  buildHitTaskOverride(originalMethod) {\n    return (model) => {\n      const cleanedFieldsObj = this.cleanUrlFields({\n        location: model.get('location'),\n        page: model.get('page'),\n      });\n      model.set(cleanedFieldsObj, null, true);\n      originalMethod(model);\n    };\n  }\n\n  /**\n   * Accepts of fields object containing URL fields and returns a new\n   * fields object with the URLs \"cleaned\" according to the tracker options.\n   * @param {!FieldsObj} fieldsObj\n   * @return {!FieldsObj}\n   */\n  cleanUrlFields(fieldsObj) {\n    const url = parseUrl(\n        /** @type {string} */ (fieldsObj.page || fieldsObj.location));\n\n    let pathname = url.pathname;\n\n    // If an index filename was provided, remove it if it appears at the end\n    // of the URL.\n    if (this.opts.indexFilename) {\n      const parts = pathname.split('/');\n      if (this.opts.indexFilename == parts[parts.length - 1]) {\n        parts[parts.length - 1] = '';\n        pathname = parts.join('/');\n      }\n    }\n\n    // Ensure the URL ends with or doesn't end with slash based on the\n    // `trailingSlash` option. Note that filename URLs should never contain\n    // a trailing slash.\n    if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n    } else if (this.opts.trailingSlash == 'add') {\n      const isFilename = /\\.\\w+$/.test(pathname);\n      if (!isFilename && pathname.substr(-1) != '/') {\n        pathname = pathname + '/';\n      }\n    }\n\n    /** @type {!FieldsObj} */\n    const cleanedFieldsObj = {\n      page: pathname + (!this.opts.stripQuery ? url.search : '')\n    }\n    if (fieldsObj.location) {\n      cleanedFieldsObj.location = fieldsObj.location;\n    }\n    if (this.queryDimension) {\n      cleanedFieldsObj[this.queryDimension] =\n          url.search.slice(1) || NULL_DIMENSION;\n    }\n\n    // Apply the `urlFieldsFilter()` option if passed.\n    if (typeof this.opts.urlFieldsFilter == 'function') {\n      /** @type {!FieldsObj} */\n      const userCleanedFieldsObj =\n          this.opts.urlFieldsFilter(cleanedFieldsObj, parseUrl);\n\n      // Ensure only the URL fields are returned.\n      return {\n        page: userCleanedFieldsObj.page,\n        location: userCleanedFieldsObj.location,\n        [this.queryDimension]: userCleanedFieldsObj[this.queryDimension],\n      };\n    } else {\n      return cleanedFieldsObj;\n    }\n  }\n\n  /**\n   * Restores all overridden tasks and methods.\n   */\n  remove() {\n    MethodChain.remove(this.tracker, 'get', this.trackerGetOverride);\n    MethodChain.remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n}\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/clean-url-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, getAttributeFields} from '../utilities';\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\nclass EventTracker {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.EVENT_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {EventTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    const selector = '[' + this.opts.attributePrefix + 'on]';\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, selector,\n          this.handleEvents, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all clicks on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n  handleEvents(event, element) {\n    const prefix = this.opts.attributePrefix;\n\n    // Ensures the event type matches the one specified on the element.\n    if (event.type != element.getAttribute(prefix + 'on')) return;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {transport: 'beacon'};\n    const attributeFields = getAttributeFields(element, prefix);\n    const userFields = assign({}, this.opts.fieldsObj, attributeFields);\n    const hitType = attributeFields.hitType || 'event';\n\n    this.tracker.send(hitType, createFieldsObj(defaultFields,\n        userFields, this.tracker, this.opts.hitFilter, element));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('eventTracker', EventTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/event-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate, parseUrl} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        getAttributeFields, withTimeout} from '../utilities';\n\n\n/**\n * Class for the `outboundLinkTracker` analytics.js plugin.\n * @implements {OutboundLinkTrackerPublicInterface}\n */\nclass OutboundLinkTracker {\n  /**\n   * Registers outbound link tracking on a tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.OUTBOUND_LINK_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundLinkTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      linkSelector: 'a, area',\n      shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {OutboundLinkTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n          this.handleLinkInteractions, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all interactions on link elements. A link is considered an outbound\n   * link if its hostname property does not match location.hostname. When the\n   * beacon transport method is not available, the links target is set to\n   * \"_blank\" to ensure the hit can be sent.\n   * @param {Event} event The DOM click event.\n   * @param {Element} link The delegated event target.\n   */\n  handleLinkInteractions(event, link) {\n    if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n      const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n      const url = parseUrl(href);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Outbound Link',\n        eventAction: event.type,\n        eventLabel: url.href,\n      };\n\n      if (!navigator.sendBeacon &&\n          linkClickWillUnloadCurrentPage(event, link)) {\n        // Adds a new event handler at the last minute to minimize the chances\n        // that another event handler for this click will run after this logic.\n        window.addEventListener('click', function(event) {\n          // Checks to make sure another event handler hasn't already prevented\n          // the default action. If it has the custom redirect isn't needed.\n          if (!event.defaultPrevented) {\n            // Stops the click and waits until the hit is complete (with\n            // timeout) for browsers that don't support beacon.\n            event.preventDefault();\n            defaultFields.hitCallback = withTimeout(function() {\n              location.href = href;\n            });\n          }\n        });\n      }\n\n      /** @type {FieldsObj} */\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(link, this.opts.attributePrefix));\n\n      this.tracker.send('event', createFieldsObj(\n          defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n    }\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit when a link is\n   * clicked. By default links with a hostname property not equal to the current\n   * hostname are tracked.\n   * @param {Element} link The link that was clicked on.\n   * @param {Function} parseUrlFn A cross-browser utility method for url\n   *     parsing (note: renamed to disambiguate when compiling).\n   * @return {boolean} Whether or not the link should be tracked.\n   */\n  shouldTrackOutboundLink(link, parseUrlFn) {\n    const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n    const url = parseUrlFn(href);\n    return url.hostname != location.hostname &&\n        url.protocol.slice(0, 4) == 'http';\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n\n/**\n * Determines if a link click event will cause the current page to upload.\n * Note: most link clicks *will* cause the current page to unload because they\n * initiate a page navigation. The most common reason a link click won't cause\n * the page to unload is if the clicked was to open the link in a new tab.\n * @param {Event} event The DOM event.\n * @param {Element} link The link element clicked on.\n * @return {boolean} True if the current page will be unloaded.\n */\nfunction linkClickWillUnloadCurrentPage(event, link) {\n  return !(\n      // The event type can be customized; we only care about clicks here.\n      event.type != 'click' ||\n      // Links with target=\"_blank\" set will open in a new window/tab.\n      link.target == '_blank' ||\n      // On mac, command clicking will open a link in a new tab. Control\n      // clicking does this on windows.\n      event.metaKey || event.ctrlKey ||\n      // Shift clicking in Chrome/Firefox opens the link in a new window\n      // In Safari it adds the URL to a favorites list.\n      event.shiftKey ||\n      // On Mac, clicking with the option key is used to download a resouce.\n      event.altKey ||\n      // Middle mouse button clicks (which == 2) are used to open a link\n      // in a new tab, and right clicks (which == 3) on Firefox trigger\n      // a click event.\n      event.which > 1);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/outbound-link-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, isObject, now, uuid} from '../utilities';\n\n\nconst HIDDEN = 'hidden';\nconst VISIBLE = 'visible';\nconst PAGE_ID = uuid();\nconst SECONDS = 1000;\n\n\n/**\n * Class for the `pageVisibilityTracker` analytics.js plugin.\n * @implements {PageVisibilityTrackerPublicInterface}\n */\nclass PageVisibilityTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.PAGE_VISIBILITY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {PageVisibilityTrackerOpts} */\n    const defaultOpts = {\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // visibleMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {PageVisibilityTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n    this.lastPageState = null;\n\n    // Binds methods to `this`.\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleWindowUnload = this.handleWindowUnload.bind(this);\n    this.handleExternalStoreSet = this.handleExternalStoreSet.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'plugins/page-visibility-tracker');\n    this.store.on('externalSet', this.handleExternalStoreSet);\n\n    // Creates the session and binds session events.\n    this.session = new Session(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    document.addEventListener('visibilitychange', this.handleChange);\n    window.addEventListener('unload', this.handleWindowUnload);\n    if (document.visibilityState == VISIBLE) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Inspects the last visibility state change data and determines if a\n   * visibility event needs to be tracked based on the current visibility\n   * state and whether or not the session has expired. If the session has\n   * expired, a change to `visible` will trigger an additional pageview.\n   * This method also sends as the event value (and optionally a custom metric)\n   * the elapsed time between this event and the previously reported change\n   * in the same session, allowing you to more accurately determine when users\n   * were actually looking at your page versus when it was in the background.\n   */\n  handleChange() {\n    const lastStoredChange = this.validateChangeData(this.store.get());\n\n    /** @type {PageVisibilityStoreData} */\n    const change = {\n      time: now(),\n      state: document.visibilityState,\n      pageId: PAGE_ID,\n    };\n\n    if (this.session.isExpired()) {\n      if (document.visibilityState == HIDDEN) {\n        // Hidden events should never be sent if a session has expired (if\n        // they are, they'll likely start a new session with just this event).\n        this.store.clear();\n      } else {\n        // If the session has expired, changes to visible should be considered\n        // a new pageview rather than a visibility event.\n        // This behavior ensures all sessions contain a pageview so\n        // session-level page dimensions and metrics (e.g. ga:landingPagePath\n        // and ga:entrances) are correct.\n\n        /** @type {FieldsObj} */\n        const defaultFields = {transport: 'beacon'};\n        this.tracker.send('pageview',\n            createFieldsObj(defaultFields, this.opts.fieldsObj,\n                this.tracker, this.opts.hitFilter));\n\n        this.store.set(change);\n      }\n    } else {\n      if (lastStoredChange.pageId == PAGE_ID &&\n          lastStoredChange.state == VISIBLE) {\n        this.sendPageVisibilityEvent(lastStoredChange);\n      }\n      this.store.set(change);\n    }\n\n    this.lastPageState = document.visibilityState;\n  }\n\n  /**\n   * Retroactively updates the stored change data in cases where it's known to\n   * be out of sync.\n   * This plugin keeps track of each visiblity change and stores the last one\n   * in localStorage. LocalStorage is used to handle situations where the user\n   * has multiple page open at the same time and we don't want to\n   * double-report page visibility in those cases.\n   * However, a problem can occur if a user closes a page when one or more\n   * visible pages are still open. In such cases it's impossible to know\n   * which of the remaining pages the user will interact with next.\n   * To solve this problem we wait for the next change on any page and then\n   * retroactively update the stored data to reflect the current page as being\n   * the page on which the last change event occured and measure visibility\n   * from that point.\n   * @param {PageVisibilityStoreData} lastStoredChange\n   * @return {PageVisibilityStoreData}\n   */\n  validateChangeData(lastStoredChange) {\n    if (this.lastPageState == VISIBLE &&\n        lastStoredChange.state == HIDDEN &&\n        lastStoredChange.pageId != PAGE_ID) {\n      lastStoredChange.state = VISIBLE;\n      lastStoredChange.pageId = PAGE_ID;\n      this.store.set(lastStoredChange);\n    }\n    return lastStoredChange;\n  }\n\n  /**\n   * Sends a Page Visibility event with the passed event action and visibility\n   * state. If a previous state change exists within the same session, the time\n   * delta is tracked as the event label and optionally as a custom metric.\n   * @param {PageVisibilityStoreData} lastStoredChange\n   * @param {number|undefined=} hitTime A hit timestap used to help ensure\n   *     original order when reporting across multiple windows/tabs.\n   */\n  sendPageVisibilityEvent(lastStoredChange, hitTime = undefined) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      nonInteraction: true,\n      eventCategory: 'Page Visibility',\n      eventAction: 'track',\n      eventLabel: NULL_DIMENSION,\n    };\n    if (hitTime) {\n      defaultFields.queueTime = now() - hitTime;\n    }\n\n    const delta = this.getTimeSinceLastStoredChange(lastStoredChange, hitTime);\n\n    // If at least a one second delta exists, report it.\n    if (delta) {\n      defaultFields.eventValue = delta;\n\n      // If a custom metric was specified, set it equal to the event value.\n      if (this.opts.visibleMetricIndex) {\n        defaultFields['metric' + this.opts.visibleMetricIndex] = delta;\n      }\n    }\n\n    this.tracker.send('event',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function(...*)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(...*)}\n   */\n  trackerSetOverride(originalMethod) {\n    return (...args) => {\n      /** @type {!FieldsObj} */\n      const fields = isObject(args[0]) ? args[0] : {[args[0]]: args[1]};\n      if (fields.page && fields.page !== this.tracker.get('page')) {\n        if (this.lastPageState == VISIBLE) {\n          this.handleChange();\n        }\n      }\n      originalMethod(...args);\n    };\n  }\n\n  /**\n   * Calculates the time since the last visibility change event in the current\n   * session. If the session has expired the reported time is zero.\n   * @param {PageVisibilityStoreData} lastStoredChange\n   * @param {number=} hitTime The timestamp of the current hit, defaulting\n   *     to now.\n   * @return {number} The time (in ms) since the last change.\n   */\n  getTimeSinceLastStoredChange(lastStoredChange, hitTime = now()) {\n    const isSessionActive = !this.session.isExpired();\n    const timeSinceLastStoredChange = lastStoredChange.time &&\n        Math.round((hitTime - lastStoredChange.time) / SECONDS);\n\n    return isSessionActive &&\n        timeSinceLastStoredChange > 0 ? timeSinceLastStoredChange : 0;\n  }\n\n  /**\n   * Handles responding to the `storage` event.\n   * The code on this page needs to be informed when other tabs or windows are\n   * updating the stored page visibility state data. This method checks to see\n   * if a hidden state is stored when there are still visible tabs open, which\n   * can happen if multiple windows are open at the same time.\n   * @param {PageVisibilityStoreData} newData\n   * @param {PageVisibilityStoreData} oldData\n   */\n  handleExternalStoreSet(newData, oldData) {\n    // If the change times are the same, then the previous write only\n    // updated the active page ID. It didn't enter a new state and thus no\n    // hits should be sent.\n    if (newData.time == oldData.time) return;\n\n    // Page Visibility events must be sent by the tracker on the page\n    // where the original event occurred. So if a change happens on another\n    // page, but this page is where the previous change event occurred, then\n    // this page is the one that needs to send the event (so all dimension\n    // data is correct).\n    if (oldData.pageId == PAGE_ID &&\n        oldData.state == VISIBLE) {\n      this.sendPageVisibilityEvent(oldData, newData.time);\n    }\n  }\n\n  /**\n   * Handles responding to the `unload` event.\n   * Since some browsers don't emit a `visibilitychange` event in all cases\n   * where a page might be unloaded, it's necessary to hook into the `unload`\n   * event to ensure the correct state is always stored.\n   */\n  handleWindowUnload() {\n    // If the stored visibility state isn't hidden when the unload event\n    // fires, it means the visibilitychange event didn't fire as the document\n    // was being unloaded, so we invoke it manually.\n    if (this.lastPageState != HIDDEN) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.session.destroy();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n    window.removeEventListener('unload', this.handleWindowUnload);\n    document.removeEventListener('visibilitychange', this.handleChange);\n  }\n}\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/page-visibility-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj} from '../utilities';\n\n\n/**\n * Class for the `socialWidgetTracker` analytics.js plugin.\n * @implements {SocialWidgetTrackerPublicInterface}\n */\nclass SocialWidgetTracker {\n  /**\n   * Registers social tracking on tracker object.\n   * Supports both declarative social tracking via HTML attributes as well as\n   * tracking for social events when using official Twitter or Facebook widgets.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.SOCIAL_WIDGET_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {SocialWidgetTrackerOpts} */\n    const defaultOpts = {\n      fieldsObj: {},\n      hitFilter: null,\n    };\n\n    this.opts = /** @type {SocialWidgetTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods to `this`.\n    this.addWidgetListeners = this.addWidgetListeners.bind(this);\n    this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n    this.handleTweetEvents = this.handleTweetEvents.bind(this);\n    this.handleFollowEvents = this.handleFollowEvents.bind(this);\n    this.handleLikeEvents = this.handleLikeEvents.bind(this);\n    this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n    if (document.readyState != 'complete') {\n      // Adds the widget listeners after the window's `load` event fires.\n      // If loading widgets using the officially recommended snippets, they\n      // will be available at `window.load`. If not users can call the\n      // `addWidgetListeners` method manually.\n      window.addEventListener('load', this.addWidgetListeners);\n    } else {\n      this.addWidgetListeners();\n    }\n  }\n\n\n  /**\n   * Invokes the methods to add Facebook and Twitter widget event listeners.\n   * Ensures the respective global namespaces are present before adding.\n   */\n  addWidgetListeners() {\n    if (window.FB) this.addFacebookEventHandlers();\n    if (window.twttr) this.addTwitterEventHandlers();\n  }\n\n  /**\n   * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons. Note: this does not capture tweet or\n   * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n   */\n  addTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.bind('tweet', this.handleTweetEvents);\n        window.twttr.events.bind('follow', this.handleFollowEvents);\n      });\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons.\n   */\n  removeTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.unbind('tweet', this.handleTweetEvents);\n        window.twttr.events.unbind('follow', this.handleFollowEvents);\n      });\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  addFacebookEventHandlers() {\n    try {\n      window.FB.Event.subscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  removeFacebookEventHandlers() {\n    try {\n      window.FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Handles `tweet` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleTweetEvents(event) {\n    // Ignores tweets from widgets that aren't the tweet button.\n    if (event.region != 'tweet') return;\n\n    const url = event.data.url || event.target.getAttribute('data-url') ||\n        location.href;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Twitter',\n      socialAction: 'tweet',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Handles `follow` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleFollowEvents(event) {\n    // Ignore follows from widgets that aren't the follow button.\n    if (event.region != 'follow') return;\n\n    const screenName = event.data.screen_name ||\n        event.target.getAttribute('data-screen-name');\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Twitter',\n      socialAction: 'follow',\n      socialTarget: screenName,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Handles `like` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the like event.\n   */\n  handleLikeEvents(url) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Facebook',\n      socialAction: 'like',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Handles `unlike` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the unlike event.\n   */\n  handleUnlikeEvents(url) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Facebook',\n      socialAction: 'unlike',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    window.removeEventListener('load', this.addWidgetListeners);\n    this.removeFacebookEventHandlers();\n    this.removeTwitterEventHandlers();\n  }\n}\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/social-widget-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport MethodChain from './method-chain';\nimport Store from './store';\nimport {now} from './utilities';\n\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n\nconst instances = {};\n\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\nexport default class Session {\n  /**\n   * Gets an existing instance for the passed arguments or creates a new\n   * instance if one doesn't exist.\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   * @return {Session} The Session instance.\n   */\n  static getOrCreate(tracker, timeout, timeZone) {\n    // Don't create multiple instances for the same property.\n    const trackingId = tracker.get('trackingId');\n    if (instances[trackingId]) {\n      return instances[trackingId];\n    } else {\n      return instances[trackingId] = new Session(tracker, timeout, timeZone);\n    }\n  }\n\n  /**\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   */\n  constructor(tracker, timeout, timeZone) {\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Overrides into the trackers sendHitTask method.\n    MethodChain.add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n\n    // Some browser doesn't support various features of the\n    // `Intl.DateTimeFormat` API, so we have to try/catch it. Consequently,\n    // this allows us to assume the presence of `this.dateTimeFormatter` means\n    // it works in the current browser.\n    try {\n      this.dateTimeFormatter =\n          new Intl.DateTimeFormat('en-US', {timeZone: this.timeZone});\n    } catch(err) {\n      // Do nothing.\n    }\n\n    // Creates the session store and adds change listeners.\n    /** @type {SessionStoreData} */\n    const defaultProps = {\n      hitTime: 0,\n      isExpired: false,\n    };\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'session', defaultProps);\n  }\n\n  /**\n   * Accepts a tracker object and returns whether or not the session for that\n   * tracker has expired. A session can expire for two reasons:\n   *   - More than 30 minutes has elapsed since the previous hit\n   *     was sent (The 30 minutes number is the Google Analytics default, but\n   *     it can be modified in GA admin \"Session settings\").\n   *   - A new day has started since the previous hit, in the\n   *     specified time zone (should correspond to the time zone of the\n   *     property's views).\n   *\n   * Note: since real session boundaries are determined at processing time,\n   * this is just a best guess rather than a source of truth.\n   *\n   * @param {SessionStoreData=} sessionData An optional sessionData object\n   *     which avoids an additional localStorage read if the data is known to\n   *     be fresh.\n   * @return {boolean} True if the session has expired.\n   */\n  isExpired(sessionData = this.store.get()) {\n    // True if the sessionControl field was set to 'end' on the previous hit.\n    if (sessionData.isExpired) return true;\n\n    const currentDate = new Date();\n    const oldHitTime = sessionData.hitTime;\n    const oldHitDate = oldHitTime && new Date(oldHitTime);\n\n    if (oldHitTime) {\n      if (currentDate - oldHitDate > (this.timeout * MINUTES)) {\n        // If more time has elapsed than the session expiry time,\n        // the session has expired.\n        return true;\n      } else if (this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n        // A new day has started since the previous hit, which means the\n        // session has expired.\n        return true;\n      }\n    }\n\n    // For all other cases return false.\n    return false;\n  }\n\n  /**\n   * Returns true if (and only if) the timezone date formatting is supported\n   * in the current browser and if the two dates are diffinitiabely not the\n   * same date in the session timezone. Anything short of this returns false.\n   * @param {!Date} d1\n   * @param {!Date} d2\n   * @return {boolean}\n   */\n  datesAreDifferentInTimezone(d1, d2) {\n    if (!this.dateTimeFormatter) {\n      return false;\n    } else {\n      return this.dateTimeFormatter.format(d1)\n          != this.dateTimeFormatter.format(d2);\n    }\n\n\n  }\n\n  /**\n   * Keeps track of when the previous hit was sent to determine if a session\n   * has expired. Also inspects the `sessionControl` field to handles\n   * expiration accordingly.\n   * @param {function(!Model)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(!Model)}\n   */\n  sendHitTaskOverride(originalMethod) {\n    return (model) => {\n      originalMethod(model);\n\n      const sessionData = this.store.get();\n      const isSessionExpired = this.isExpired(sessionData);\n      const sessionControl = model.get('sessionControl');\n\n      const sessionWillStart = sessionControl == 'start' || isSessionExpired;\n      const sessionWillEnd = sessionControl == 'end';\n\n      // Update the stored session data.\n      sessionData.hitTime = now();\n      if (sessionWillStart) {\n        sessionData.isExpired = false;\n      }\n      if (sessionWillEnd) {\n        sessionData.isExpired = true;\n      }\n      this.store.set(sessionData);\n    }\n  }\n\n  /**\n   * Restores the tracker's original `sendHitTask` to the state before\n   * session control was initialized and removes this instance from the global\n   * store.\n   */\n  destroy() {\n    MethodChain.remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n    this.store.destroy();\n    delete instances[this.tracker.get('trackingId')];\n  }\n}\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/session.js","import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/delegate.js","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/get-attributes.js","const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/parse-url.js"],"sourceRoot":""}